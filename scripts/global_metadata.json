{

  "explainBlockchain": {
    "location": "code/blockchain/explainBlockchain.txt",
    "opengenus_iq:": "https://iq.opengenus.org/p/f3110420-24e9-40f8-9ee5-79b5df2f88ff/"
  },
  "undo in git" : {
    "location" : "code/git/undochanges",
    "opengenus_iq": "https://iq.opengenus.org/p/5a525c5f-e1ac-418c-abac-ff118587dd83/"
  },
  "view hist" : {
    "location" : "code/git/viewhist",
    "opengenus_iq" : "https://iq.opengenus.org/p/911697a3-030c-481a-9793-39138000febd/"
  },
  "bernoulli_naive_bayes": {
      "location": "code/artificial_intelligence/src/Bernoulli Naive Bayes",
      "opengenus_discuss": "",
      "opengenus_iq": "https://iq.opengenus.org/bernoulli-naive-bayes/",
      "files": [
        "README.md",
        "bernoulli.py"
      ],
      "updated": "31-05-2020 14:30:00"
    },
   "largest-element-in-an-array": {
      "location": "code/languages/cpp/largest-element-in-an-array",
      "opengenus_discuss": "",
      "opengenus_iq": "https://iq.opengenus.org/largest-element-in-an-array/",
      "files": [
        "Largest_element.cpp"
        "README.md"
      ],
      "updated": "31-05-2020 17:41:00"
    }
  },
"Kadane_algo": {
      "location": "code/languages/Java/Kadane_algo",
      "opengenus_discuss": "",
      "opengenus_iq": "https://iq.opengenus.org/kadane-algorithm/",
      "files": [
        "Kadane_algo.java"
        "README.md"
      ],
      "updated": "31-05-2020 17:41:00"
    }
  },
  "square_root_decomposition": {
    "mos_algorithm": {
      "location": "code/square_root_decomposition/src/mos_algorithm",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "mos_algorithm.cpp"
      ],
      "updated": "18-05-2019 08:11:05"
    }
  },
  "filters": {
    "median_filter": {
      "location": "code/filters/src/median_filter",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "median_filter.py"
      ],
      "updated": "18-05-2019 08:11:05"
    },
    "gaussian_filter": {
      "location": "code/filters/src/gaussian_filter",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "gaussian_filter.py"
      ],
      "updated": "18-05-2019 08:11:05"
    }
  },
  "algorithm_applications":{
    "binary_search":{
      "distributing_candies":{
        "location": "code/algorithm_applications/src/binary_search/distributing_candies/",
      "opengenus_discuss": "",
      "opengenus_iq": "https://iq.opengenus.org/distribute-candies/",
      "files": [
        "CandyDistribution.java"
      ],
      "updated": "02-05-2020 19:40:00"
      }
    }
  },
  "dynamic_programming": {
    "edit_distance": {
      "location": "code/dynamic_programming/src/edit_distance",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "edit_distance.php",
        "edit_distance.rs",
        "edit_distance_hirschberg.cpp",
        "edit_distance_backtracking.cpp",
        "edit_distance.go",
        "edit_distance.c",
        "edit_distance.py",
        "edit_distance.cpp",
        "edit_distance.hs",
        "edit_distance.java",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:05"
    },
    "postmans_sort": {
      "location": "code/sorting/src/postmans_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "https://iq.opengenus.org/postman-sort/",
      "files": [
        "postmans_sort.cpp",
        "readme.md"
      ],
      "updated": "29-05-2019 20:50:07"
    },
    "rod_cutting": {
      "location": "code/dynamic_programming/src/rod_cutting",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "rod_cutting.hs",
        "rod_cutting.cpp",
        "rod_cutting.py",
        "README.md",
        "rod_cutting.go",
        "rod_cutting.c"
      ],
      "updated": "18-05-2019 08:11:05"
    },
    "number_of_substring_divisible_by_8_but_not_3": {
      "location": "code/dynamic_programming/src/number_of_substring_divisible_by_8_but_not_3",
      "opengenus_discuss": "",
      "opengenus_iq": "https://iq.opengenus.org/number-of-substrings-divisible-by-8-but-not-3/",
      "files": [
       "number_of_substrings.cpp",
       "README.md"
      ],
      "updated": "24-05-2020 08:11:05"
    },
    "minimum_insertion_palindrome": {
      "location": "code/dynamic_programming/src/minimum_insertion_palindrome",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "minimum_insertions_palindrome_using_lcs.cpp"
      ],
      "updated": "18-05-2019 08:11:05"
    },
    "weighted_job_scheduling": {
      "location": "code/dynamic_programming/src/weighted_job_scheduling",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md",
        "weighted_job_scheduling.cpp"
      ],
      "updated": "18-05-2019 08:11:05"
    },
    "boolean_parenthesization": {
      "location": "code/dynamic_programming/src/boolean_parenthesization",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "boolean_parenthesization.py",
        "boolean_parenthesization.c",
        "boolean_parenthesization.swift",
        "boolean_parenthesization.cpp",
        "README.md",
        "boolean_parenthesization.java"
      ],
      "updated": "18-05-2019 08:11:05"
    },
    "shortest_common_supersequence": {
      "location": "code/dynamic_programming/src/shortest_common_supersequence",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "scs.java",
        "README.md",
        "shortest_common_supersequence.cpp",
        "shortest_common_supersequence.py"
      ],
      "updated": "18-05-2019 08:11:05"
    },
    "longest_common_subsequence": {
      "location": "code/dynamic_programming/src/longest_common_subsequence",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "longest_common_subsequence.py",
        "longestcommonsubsequence.go",
        "longestcommonsubsequencerec.java",
        "README.md",
        "longest_common_subsequence.cpp",
        "longestcommonsubsequence.java"
      ],
      "updated": "18-05-2019 08:11:05"
    },
    "fibonacci": {
      "location": "code/dynamic_programming/src/fibonacci",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "fibonacci.py"
      ],
      "updated": "30-05-2020 15:09:06"
    },
    "house_robber":{
      "location": "code/dynamic_programming/src/house_robber",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "HouseRobber.java"
        "README.md"
      ],
      "updated": "18-05-2019 08:11:05"
    },
    "box_stacking": {
      "location": "code/dynamic_programming/src/box_stacking",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "box_stacking.py",
        "box_stacking.java",
        "README.md",
        "box_stacking.cpp"
      ],
      "updated": "18-05-2019 08:11:05"
    },
    "coin_change": {
      "location": "code/dynamic_programming/src/coin_change",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "coinchange.c",
        "coin_change.py",
        "mincoinchange.cpp",
        "coin_change.java",
        "README.md",
        "coinchange.go",
        "coinchange.cpp"
      ],
      "updated": "18-05-2019 08:11:05"
    },
    "largest_sum_contiguous_subarray": {
      "location": "code/dynamic_programming/src/largest_sum_contiguous_subarray",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "largest_sum_contiguous_subarray.go",
        "largest_sum_contiguous_subarray.py",
        "largest_sum_contiguous_subarray.java",
        "largest_sum_contiguous_subarray.hs",
        "README.md",
        "largest_sum_contiguous_subarray.cpp",
        "largest_sum_contiguous_subarray.c"
      ],
      "updated": "18-05-2019 08:11:05"
    },
    "longest_bitonic_sequence": {
      "location": "code/dynamic_programming/src/longest_bitonic_sequence",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "longest_bitonic_sequence.py",
        "longest_bitonic_sequence.c",
        "longest_bitonic_sequence.js",
        "longestbitonicseq.cpp",
        "README.md",
        "longestbitonicsequence.java"
      ],
      "updated": "18-05-2019 08:11:05"
    },
    "longest_common_substring": {
      "location": "code/dynamic_programming/src/longest_common_substring",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "longest_common_substring.cpp"
      ],
      "updated": "18-05-2019 08:11:05"
    },
    "min_cost_path": {
      "location": "code/dynamic_programming/src/min_cost_path",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "min_cost_path.c",
        "min_cost_path.java",
        "min_cost_path.cpp",
        "min_cost_path.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "knapsack": {
      "location": "code/dynamic_programming/src/knapsack",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "knapsack.go",
        "knapsack.js",
        "knapsack.c",
        "knapsack.java",
        "knapsack.cpp",
        "README.md",
        "knapsack.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "array_median": {
      "location": "code/dynamic_programming/src/array_median",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "median.rb",
        "median.cpp",
        "median.java",
        "median.c",
        "median.php",
        "median.rs",
        "median.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "minimum_cost_polygon_triangulation": {
      "location": "code/dynamic_programming/src/minimum_cost_polygon_triangulation",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "optimal_binary_search_tree": {
      "location": "code/dynamic_programming/src/optimal_binary_search_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "optimal_bst.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "tiling_problem": {
      "location": "code/dynamic_programming/src/tiling_problem",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "tiling.py",
        "tiling.c",
        "tiling.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "longest_common_increasing_subsequence": {
      "location": "code/dynamic_programming/src/longest_common_increasing_subsequence",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "longest_common_increasing_subsequence.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "longest_repeating_subsequence": {
      "location": "code/dynamic_programming/src/longest_repeating_subsequence",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "longest_repeating_subsequence.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "longest_independent_set": {
      "location": "code/dynamic_programming/src/longest_independent_set",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "no_consec_ones": {
      "location": "code/dynamic_programming/src/no_consec_ones",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "no_consec_ones.py",
        "no_consec_1.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "numeric_keypad_problem": {
      "location": "code/dynamic_programming/src/numeric_keypad_problem",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "numeric_keypad_problem.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "longest_palindromic_sequence": {
      "location": "code/dynamic_programming/src/longest_palindromic_sequence",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "longest_palindromic_sequence.js",
        "longest_palindromic_sequence.c",
        "longest_palindromic_sequence.cpp",
        "README.md",
        "longest_palindromic_sequence.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "maximum_weight_independent_set_of_path_graph": {
      "location": "code/dynamic_programming/src/maximum_weight_independent_set_of_path_graph",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "maximum_weight_independent_set_of_path_graph.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "palindrome_partition": {
      "location": "code/dynamic_programming/src/palindrome_partition",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "palindrome_partition.js",
        "README.md",
        "palindrome_partition.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "digit_dp": {
      "location": "code/dynamic_programming/src/digit_dp",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "digit_dp.cpp",
        "DigitDP.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "maximum_sum_sub_matrix": {
      "location": "code/dynamic_programming/src/maximum_sum_sub_matrix",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "maximum_sum_sub_matrix.java",
        "maximum_sum_sub_matrix.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "longest_increasing_subsequence": {
      "location": "code/dynamic_programming/src/longest_increasing_subsequence",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "longest_increasing_subsequence.js",
        "longest_increasing_subsequence.py",
        "longest_increasing_subsequence.go",
        "longest_increasing_subsequence.cpp",
        "longest_increasing_subsequence_using_segment_tree.cpp",
        "README.md",
        "longest_increasing_subsequence.java",
        "longest_increasing_subsequence.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "matrix_chain_multiplication": {
      "location": "code/dynamic_programming/src/matrix_chain_multiplication",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "matrix_chain_multiplication.c",
        "matrix_chain_multiplication.cpp",
        "matrixchainmultiplication.java",
        "README.md",
        "matrix_chain_multiplication.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "maximum_sum_increasing_subsequence": {
      "location": "code/dynamic_programming/src/maximum_sum_increasing_subsequence",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "maximum_sum_increasing_subsequence.c",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "egg_dropping_puzzle": {
      "location": "code/dynamic_programming/src/egg_dropping_puzzle",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "egg_dropping_puzzle.cpp",
        "eggdroppingpuzzle.java",
        "egg_dropping_puzzle.py",
        "egg_dropping_puzzle.hs",
        "README.md",
        "egg_dropping_puzzle.c"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "game_theory": {
    "game_of_nim_next_best_move": {
      "location": "code/game_theory/src/game_of_nim_next_best_move",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "next_best_move.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "grundy_numbers_kayle": {
      "location": "code/game_theory/src/grundy_numbers_kayle",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "grundy_numbers_kayle.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "game_of_nim_win_loss_prediction": {
      "location": "code/game_theory/src/game_of_nim_win_loss_prediction",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "win_loss_prediction.py"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "artificial_intelligence": {
    "restricted_boltzmann_machine": {
      "location": "code/artificial_intelligence/src/restricted_boltzmann_machine",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "train.csv",
        "test.csv",
        "README.md",
        "rbm.ipynb"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "random_forests": {
      "location": "code/artificial_intelligence/src/random_forests",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "isodata_clustering": {
      "location": "code/artificial_intelligence/src/isodata_clustering",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "readme.md",
        "isodata.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "gaussian_naive_bayes": {
      "location": "code/artificial_intelligence/src/gaussian_naive_bayes",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "gaussiannaivebayesmoons.py",
        "graph.png"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "principal_component_analysis": {
      "location": "code/artificial_intelligence/src/principal_component_analysis",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "pca.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "q_learning": {
      "location": "code/artificial_intelligence/src/q_learning",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "qlearning.js",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "image_processing": {
      "location": "code/artificial_intelligence/src/image_processing",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "install_opencv.sh",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "gaussian_mixture_model": {
      "location": "code/artificial_intelligence/src/gaussian_mixture_model",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "artificial_neural_network": {
      "location": "code/artificial_intelligence/src/artificial_neural_network",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "dataset.csv",
        "ann.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "factorization_machines": {
      "location": "code/artificial_intelligence/src/factorization_machines",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "matrix_factorization.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "decision_tree": {
      "location": "code/artificial_intelligence/src/decision_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "decision_trees_information_gain.py",
        "decision_tree.py",
        "data_banknote_authentication.csv"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "sat": {
      "location": "code/artificial_intelligence/src/sat",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "togasat.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "a_star": {
      "location": "code/artificial_intelligence/src/a_star",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "astar.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "perceptron": {
      "location": "code/artificial_intelligence/src/perceptron",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "perceptron.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "convolutional_neural_network": {
      "location": "code/artificial_intelligence/src/convolutional_neural_network",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "cnn_adversarial_examples.ipynb",
        "cnn.ipynb",
        "train.csv",
        "test.csv"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "k_means": {
      "location": "code/artificial_intelligence/src/k_means",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "k_means.swift",
        "k_means.cpp",
        "k_means.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "neural_style_transfer": {
      "location": "code/artificial_intelligence/src/neural_style_transfer",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "neural_style_transfer.ipynb"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "getting_started_with_ml": {
      "location": "code/artificial_intelligence/src/getting_started_with_ml",
      "opengenus_discuss": "",
      "opengenus_iq": "https://iq.opengenus.org/how-i-mastered-ml-as-fresher/",
      "files": [
        "README.md"
      ],
      "updated": "29-05-2020 04:53:00"
    },
    "gradient_boosting_trees": {
      "location": "code/artificial_intelligence/src/gradient_boosting_trees",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "k_nearest_neighbours": {
      "location": "code/artificial_intelligence/src/k_nearest_neighbours",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "k_nearest_neighbours.py",
        "iris.data"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "autoenncoder": {
      "location": "code/artificial_intelligence/src/autoenncoder",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "autoencoder.ipynb"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "neural_network": {
      "location": "code/artificial_intelligence/src/neural_network",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "neuralnetwork.py",
        "keras_nn.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "dbscan_clustering": {
      "location": "code/artificial_intelligence/src/dbscan_clustering",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "readme.md",
        "dbscan.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "logistic_regression": {
      "location": "code/artificial_intelligence/src/logistic_regression",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "logistic_regression.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "tsp": {
      "location": "code/artificial_intelligence/src/tsp",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "euc_500",
        "makefile",
        "algo.md",
        "noneuc_500",
        "noneuc_100",
        "salesman.cpp",
        "euc_250",
        "noneuc_250",
        "euc_100"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "naive_bayes": {
      "location": "code/artificial_intelligence/src/naive_bayes",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "naive_bayes.swift",
        "iris1.csv",
        "gaussian_naive_bayes.py",
        "README.md",
        "naive_bayes.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "support_vector_machine": {
      "location": "code/artificial_intelligence/src/support_vector_machine",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "svm.py",
        "svm.c",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "t_distributed_stochastic_neighbor_embedding": {
      "location": "code/artificial_intelligence/src/t_distributed_stochastic_neighbor_embedding",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "minimax": {
      "location": "code/artificial_intelligence/src/minimax",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md",
        "minimax.py"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "src": {
    "linear_regression": {
      "location": "code/artificial_intelligence/src/linear_regression/linear_regression",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "linear_regression.js"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "sobelfilter": {
      "location": "code/artificial_intelligence/src/image_processing/sobelfilter",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "sobel.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "image_stitching": {
      "location": "code/artificial_intelligence/src/image_processing/image_stitching",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "a.out",
        "imagestitching.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "prewittfilter": {
      "location": "code/artificial_intelligence/src/image_processing/prewittfilter",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "prewitt.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "canny": {
      "location": "code/artificial_intelligence/src/image_processing/canny",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "canny.h",
        "main.cpp",
        "canny.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "erode_dilate": {
      "location": "code/artificial_intelligence/src/image_processing/erode_dilate",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "main.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "houghtransform": {
      "location": "code/artificial_intelligence/src/image_processing/houghtransform",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "main.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "nsm_matlab": {
      "location": "code/artificial_intelligence/src/nearest_sequence_memory/nsm_matlab",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "main.m",
        "simulator.m",
        "nsm_agent.m"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "lbestPSO": {
      "location": "code/artificial_intelligence/src/particle_swarm_optimization/lbestPSO",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "Lbest2D.py",
        "LBest3D.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "gbestPSO": {
      "location": "code/artificial_intelligence/src/particle_swarm_optimization/gbestPSO",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "Gbest3D.py",
        "Gbest2D.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "hierachical_clustering": {
      "location": "code/artificial_intelligence/src/hierachical_clustering/hierachical_clustering",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "hierarchical_clustering.ipynb"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "adjacency_matrix_c": {
      "location": "code/graph_algorithms/src/data_structures/adjacency_matrix_c",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "mgraph_struct.c",
        "main.c",
        "mgraph_struct.h"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "adjacency_lists_in_c": {
      "location": "code/graph_algorithms/src/adjacency_lists_graph_representation/adjacency_lists_in_c",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "lgraph_stack.h",
        "lgraph_struct.c",
        "lgraph_struct.h",
        "main.c",
        "lgraph_stack.c",
        "README.MD"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "palindrome_check": {
      "location": "code/utility/src/palindrome/palindrome_check",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "palindrome_check.java",
        "palindrome_check.js",
        "palindrome.py",
        "palindrome_check.cpp",
        "palindrome.nim",
        "palindrome_check.c",
        "palindrome_check.cs",
        "palindrome_check.rb"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "facade": {
      "location": "code/design_pattern/src/OOP_patterns/facade",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "facade",
        "main.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "factory": {
      "location": "code/design_pattern/src/OOP_patterns/factory",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "gifttype.java",
        "roulette.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "observer_java": {
      "location": "code/design_pattern/src/OOP_patterns/observer_java",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "demo.java",
        "main.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "singleton_pattern": {
      "location": "code/design_pattern/src/OOP_patterns/singleton_pattern",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "singleton_pattern.java",
        "singleton_pattern.php",
        "singleton_pattern.cpp",
        "singleton_pattern.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "observer_pattern": {
      "location": "code/design_pattern/src/OOP_patterns/observer_pattern",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "observer_pattern.rs",
        "observer_pattern.py",
        "observer_pattern.cpp",
        "__init__.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "adapter": {
      "location": "code/design_pattern/src/OOP_patterns/adapter",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "civilian.java",
        "adaptor.java",
        "movement.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "complement_dna_strand": {
      "location": "code/online_challenges/src/rosalind/complement_dna_strand",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "complement_dna.rs",
        "complement_dna_strand.exs"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "encryption": {
      "location": "code/online_challenges/src/hackerrank/encryption",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "encryption.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "the_maximum_subarray": {
      "location": "code/online_challenges/src/hackerrank/the_maximum_subarray",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "the_maximum_subarray.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "3D_aurface_area": {
      "location": "code/online_challenges/src/hackerrank/3D_aurface_area",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "3D_surface_area.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "almost_sorted": {
      "location": "code/online_challenges/src/hackerrank/almost_sorted",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "almost_sorted.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "array_manipulation": {
      "location": "code/online_challenges/src/hackerrank/array_manipulation",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "array_manipulation.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "bigger_is_greater": {
      "location": "code/online_challenges/src/hackerrank/bigger_is_greater",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "bigger_is_greater.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_102": {
      "location": "code/online_challenges/src/project_euler/problem_102",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "triangles.txt",
        "README.md",
        "problem_102.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_022": {
      "location": "code/online_challenges/src/project_euler/problem_022",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_022.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_019": {
      "location": "code/online_challenges/src/project_euler/problem_019",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_019.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_007": {
      "location": "code/online_challenges/src/project_euler/problem_007",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_007.js",
        "problem_007.cpp",
        "problem_007.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_008": {
      "location": "code/online_challenges/src/project_euler/problem_008",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_008.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_037": {
      "location": "code/online_challenges/src/project_euler/problem_037",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md",
        "problem_037.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_004": {
      "location": "code/online_challenges/src/project_euler/problem_004",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_004.cpp",
        "problem_004.py",
        "README.md",
        "problem_004.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_014": {
      "location": "code/online_challenges/src/project_euler/problem_014",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_014.py",
        "problem_014.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_036": {
      "location": "code/online_challenges/src/project_euler/problem_036",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_036.cpp",
        "README.md",
        "problem_036.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_024": {
      "location": "code/online_challenges/src/project_euler/problem_024",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_024.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_005": {
      "location": "code/online_challenges/src/project_euler/problem_005",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_005.java",
        "problem_005.c",
        "problem_005.cpp",
        "README.md",
        "problem_005.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_020": {
      "location": "code/online_challenges/src/project_euler/problem_020",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_020.java",
        "problem_020.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_028": {
      "location": "code/online_challenges/src/project_euler/problem_028",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_028.cpp",
        "README.md",
        "problem_028.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_010": {
      "location": "code/online_challenges/src/project_euler/problem_010",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_010.py",
        "README.md",
        "problem_010.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_016": {
      "location": "code/online_challenges/src/project_euler/problem_016",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_016.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_006": {
      "location": "code/online_challenges/src/project_euler/problem_006",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_006.cpp",
        "problem_006.java",
        "README.md",
        "problem_006.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_002": {
      "location": "code/online_challenges/src/project_euler/problem_002",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_002.cpp",
        "problem_002.c",
        "problem_002.java",
        "problem_002.py",
        "problem_002.js",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_034": {
      "location": "code/online_challenges/src/project_euler/problem_034",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_034.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_003": {
      "location": "code/online_challenges/src/project_euler/problem_003",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_003.cpp",
        "problem_003.py",
        "problem_003.js",
        "problem_003.java",
        "README.md",
        "problem_003.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_013": {
      "location": "code/online_challenges/src/project_euler/problem_013",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_013.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_026": {
      "location": "code/online_challenges/src/project_euler/problem_026",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_026.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_012": {
      "location": "code/online_challenges/src/project_euler/problem_012",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_012.py",
        "problem_012.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_040": {
      "location": "code/online_challenges/src/project_euler/problem_040",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_040.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_018": {
      "location": "code/online_challenges/src/project_euler/problem_018",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_018.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_067": {
      "location": "code/online_challenges/src/project_euler/problem_067",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_067.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_021": {
      "location": "code/online_challenges/src/project_euler/problem_021",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md",
        "problem_021.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_009": {
      "location": "code/online_challenges/src/project_euler/problem_009",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_009.py",
        "problem_009.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_001": {
      "location": "code/online_challenges/src/project_euler/problem_001",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_001.js",
        "problem_001.py",
        "problem_001.java",
        "problem_001.c",
        "problem_001.cpp",
        "README.md",
        "problem_001.rs"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "problem_025": {
      "location": "code/online_challenges/src/project_euler/problem_025",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "problem_025.cpp",
        "README.md",
        "problem_025.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "JAIN": {
      "location": "code/online_challenges/src/codechef/JAIN",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md",
        "JAIN.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "NBONACCI": {
      "location": "code/online_challenges/src/codechef/NBONACCI",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md",
        "NBONACCI.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "CHDIGER": {
      "location": "code/online_challenges/src/codechef/CHDIGER",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "CHDIGER.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "CHNUM": {
      "location": "code/online_challenges/src/codechef/CHNUM",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "CHNUM.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "fermat_primality_test": {
      "location": "code/mathematical_algorithms/src/primality_tests/fermat_primality_test",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "fermat_primality_test.py",
        "fermat_primality_test.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "miller_rabin_primality_test": {
      "location": "code/mathematical_algorithms/src/primality_tests/miller_rabin_primality_test",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "miller_rabin_primality_test.cpp",
        "miller_rabin_primality_test.py",
        "miller_rabin_primality_test.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "solovay_strassen_primality_test": {
      "location": "code/mathematical_algorithms/src/primality_tests/solovay_strassen_primality_test",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "solovay_strassen_primality_test.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "exponentiation_by_squaring": {
      "location": "code/mathematical_algorithms/src/exponentiation_power/exponentiation_by_squaring",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "exponentiation_by_squaring.py",
        "exponentiation_by_squaring.go",
        "exponentiation_by_squaring.cpp",
        "exponentiation_by_squaring.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "scala": {
      "location": "code/mathematical_algorithms/src/gaussian_elimination/scala/src/main/scala",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "main.scala"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "validate_ip": {
      "location": "code/networking/src/validate_ip/validate_ip",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "validate_ipv6.c",
        "validate_ipv4.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "huffman": {
      "location": "code/compression/src/lossless_compression/huffman",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "huffman.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "lempel_ziv_welch": {
      "location": "code/compression/src/lossless_compression/lempel_ziv_welch",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "lzw.cpp",
        "README.md",
        "lzw.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "dining_philosophers": {
      "location": "code/operating_system/src/concurrency/dining_philosophers",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "dining_philosophers.c",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "producer_consumer": {
      "location": "code/operating_system/src/concurrency/producer_consumer",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "producer_consumer.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "readers_writers": {
      "location": "code/operating_system/src/concurrency/readers_writers",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "readers_writers.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "bankers_algorithm": {
      "location": "code/operating_system/src/deadlocks/bankers_algorithm",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "banker_safety.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "multi_level_feedback_queue_scheduling": {
      "location": "code/operating_system/src/scheduling/multi_level_feedback_queue_scheduling",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "mlfq.ts"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "round_robin_scheduling": {
      "location": "code/operating_system/src/scheduling/round_robin_scheduling",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "round_robin_scheduling.cpp",
        "round_robin_scheduling.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "smallest_remaining_time_first": {
      "location": "code/operating_system/src/scheduling/smallest_remaining_time_first",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "srtf.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "first_come_first_serve": {
      "location": "code/operating_system/src/scheduling/first_come_first_serve",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "fcfs.cs",
        "fcfs.cpp",
        "fcfs.rs",
        "fcfs.py",
        "fcfs.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "shortest_seek_time_first": {
      "location": "code/operating_system/src/scheduling/shortest_seek_time_first",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "shortest_seek_time_first.c",
        "shortest_seek_time_first.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "memory_mapping": {
      "location": "code/operating_system/src/memory_management/memory_mapping",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "mapping.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "least_recently_used": {
      "location": "code/operating_system/src/memory_management/least_recently_used",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "lru.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "bloom_filter": {
      "location": "code/data_structures/src/hashs/bloom_filter",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "bloom_filter.scala",
        "bloom_filter.js",
        "bloom_filter.java",
        "bloom_filter.py",
        "bloomfilter.go",
        "bloom_filter.c",
        "README.md",
        "bloom_filter.swift",
        "bloom_filter.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "hash_table": {
      "location": "code/data_structures/src/hashs/hash_table",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "hash_table.rs",
        "double_hashing.c",
        "hash_table.swift",
        "hash_table.c",
        "hash_table.js",
        "hash_table.py",
        "hash_table.go",
        "hash_table.cpp",
        "README.md",
        "hash_table.cs",
        "hash_table.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "infix_to_postfix": {
      "location": "code/data_structures/src/stack/infix_to_postfix",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "infix_to_postfix.c",
        "infix_to_postfix.java",
        "infix_to_postfix.py",
        "infix_to_postfix.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "postfix_evaluation": {
      "location": "code/data_structures/src/stack/postfix_evaluation",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "postfix_evaluation.sh",
        "README.md",
        "postfix_evaluation.c",
        "postfix_evaluation.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "balanced_expression": {
      "location": "code/data_structures/src/stack/balanced_expression",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "balanced_expression.cpp",
        "balanced_expression.java",
        "balanced_expression.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "reverse_stack": {
      "location": "code/data_structures/src/stack/reverse_stack",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "reverse_stack.swift",
        "reverse_stack.cs",
        "reverse_stack.c",
        "reverse_stack.go",
        "reverse_stack_without_extra_space.cpp",
        "reverse_stack.java",
        "README.md",
        "reverse_stack.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "stack": {
      "location": "code/data_structures/src/stack/stack",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "stack.py",
        "stack.php",
        "stack.go",
        "stack.js",
        "stack.java",
        "stack.swift",
        "stack.c",
        "stack.ex",
        "stack.erl",
        "stack.cpp",
        "stack.rs",
        "README.md",
        "stack.rb",
        "stack.cs"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "prefix_to_postfix": {
      "location": "code/data_structures/src/stack/prefix_to_postfix",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "prefix_to_postfix.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "abstract_stack": {
      "location": "code/data_structures/src/stack/abstract_stack",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "istack.h",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "sort_stack": {
      "location": "code/data_structures/src/stack/sort_stack",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md",
        "sort_stack.c",
        "sort_stack.py",
        "sort_stack.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "heap": {
      "location": "code/data_structures/src/tree/heap",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "skip_list": {
      "location": "code/data_structures/src/list/skip_list",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "skip_list.cpp",
        "skip_list.swift",
        "skip_list.scala",
        "README.md",
        "skip_list.c",
        "skiplist.rb",
        "skip_list.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "doubly_linked_list": {
      "location": "code/data_structures/src/list/doubly_linked_list",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "doublylinkedlist.java",
        "doubly_linked_list.swift",
        "doubly_linked_list.go",
        "doubly_linked_list.py",
        "doubly_linked_list.cpp",
        "doubly_linked_list.js"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "circular_linked_list": {
      "location": "code/data_structures/src/list/circular_linked_list",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "circularlinkedlist.java",
        "circular_linked_list.c",
        "circular_linked_list.py",
        "circular_linked_list.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "singly_linked_list": {
      "location": "code/data_structures/src/list/singly_linked_list",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "singly_linked_list_with_classes.cpp",
        "singly_linked_list.rb",
        "singly_linked_list.py",
        "singly_linked_list.c",
        "singly_linked_list.swift",
        "singly_linked_list.go",
        "singly_linked_list_menu_driven.c",
        "singly_linked_list.cpp",
        "singly_linked_list.js",
        "singly_linked_list_with_3_nodes.java",
        "singly_linked_list.cs",
        "singly_linked_list.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "xor_linked_list": {
      "location": "code/data_structures/src/list/xor_linked_list",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md",
        "xor_linked_list.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "queue_stream": {
      "location": "code/data_structures/src/queue/queue_stream",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "queue_stream.cs"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "queue_using_linked_list": {
      "location": "code/data_structures/src/queue/queue_using_linked_list",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "queue_using_linked_list.rb",
        "queue_using_linked_list.c",
        "queue_using_linked_list.py",
        "queue_using_linked_list.java",
        "README.md",
        "queue_using_linked_list.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "reverse_queue": {
      "location": "code/data_structures/src/queue/reverse_queue",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "reverse_queue.go",
        "reverse_queue.swift",
        "reverse_queue.java",
        "reverse_queue.cpp",
        "reverse_queue.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "circular_buffer": {
      "location": "code/data_structures/src/queue/circular_buffer",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "circular_buffer.py",
        "circular_buffer.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "queue_using_stack": {
      "location": "code/data_structures/src/queue/queue_using_stack",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "queue_using_stack.java",
        "queue_using_stack.sh",
        "queue_using_stack.py",
        "queue_using_stack.cpp",
        "queue_using_stack.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "double_ended_queue": {
      "location": "code/data_structures/src/queue/double_ended_queue",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "deque_queue_library_function.cpp",
        "deque.cpp",
        "deque.c",
        "deque.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "queue": {
      "location": "code/data_structures/src/queue/queue",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "queue_vector.cpp",
        "queue.exs",
        "queue.cs",
        "queue.c",
        "queue.rb",
        "queue.js",
        "queue.java",
        "queue.swift",
        "queue.py",
        "README.md",
        "queue.go",
        "queue.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "aes_csharp": {
      "location": "code/cryptography/src/aes_128/aes_csharp",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "aesdecipher.cs",
        "aescipher.cs",
        "helpers.cs",
        "README.md",
        "aeskeygen.cs",
        "aesconsts.cs"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "sha_256": {
      "location": "code/cryptography/src/sha/sha_256",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "sha_256.py"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "computer_graphics": {
    "diamond_square": {
      "location": "code/computer_graphics/src/diamond_square",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "diamond_square.py",
        "diamondsquare.java"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "languages": {
    "dynamic_memory_allocation": {
      "location": "code/languages/c/dynamic_memory_allocation",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md",
        "example.c"
      ],
      "updated": "18-05-2019 08:11:06"
     }
    },
    "2d-array-list":{
      "location": "code/languages/Java/2d-array-list-java.java",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md",
        "2d-array-list-java.java"
      ],
      "updated": "29-05-2020 05:22:42"
     }
    },
    "Reduce_time_complexity_in_java":{
      "location": "code/languages/Java/reduce_time_complexity.java",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md",
        "Reduce_Time_complexity"
      ],
      "updated": "29-05-2020 05:22:42"
     }
    },
    "double_to_string": {
      "location": "code/languages/cpp/double_to_string",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md",
        "double_to_string.cpp"
      ],
      "updated": "29-05-2020 14:02:06"
      }
    },
    "2d-array":{
    "location": "code/languages/Java/2d-array.java",
    "opengenus_discuss": "",
    "opengenus_iq": "",
    "files": [
        "README.md",
        "2d-array.java"
        ],
        "updated": "29-05-2020 04:26:42"
        }
    },
    "delete_vs_free":{
      "location": "code/languages/cpp/delete_vs_free",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md",
        "free_vs_delete.cpp.c"
       ],
      "updated": "31-05-2020 16:01:43"
      }
    },
    "delete_array":{
      "location": "code/languages/c/delete_array",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md",
        "del.c"
      ],
      "updated": "29-05-2020 02:54:16"
    }
  },
  "begin_and_end":{
    "location": "code/languages/cpp/begin_and_end",
    "opengenus_discuss": "",
    "opengenus_iq": "",
    "files": [
      "README.md",
      "begin_and_end.cpp"
    ],
    "updated": "29-05-2020 13:04:36"
   }
 },
  "search": {
    "binary_search": {
      "location": "code/search/src/binary_search",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "binary_search.rs",
        "binary_search.scala",
        "binary_search.java",
        "binary_search.php",
        "binary_search.c",
        "binary_search.rkt",
        "binary_search.py",
        "binary_search.js",
        "binary_search.ex",
        "binary_search.go",
        "binary_search.rb",
        "binary_search.hs",
        "binary_search.swift",
        "binary_search.cs",
        "binary_search.cpp",
        "binary_search.sh",
        "README.md",
        "binary_search_2.cpp",
        "binary_search.kt"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "jump_search": {
      "location": "code/search/src/jump_search",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "jump_search.php",
        "jump_search.js",
        "jump_search.go",
        "jump_search.cpp",
        "jump_search.rs",
        "jump_search.py",
        "README.md",
        "jump_search.java",
        "jump_search.c",
        "jump_search.swift"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "linear_search": {
      "location": "code/search/src/linear_search",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "linear_search.cpp",
        "linear_search.rs",
        "linear_search.js",
        "linear_search.nim",
        "linear_search.clj",
        "linear_search.swift",
        "linear_search.php",
        "linear_search.re",
        "linear_search.go",
        "linear_search.ml",
        "linear_search.py",
        "linear_search.rb",
        "linear_search.hs",
        "README.md",
        "linear_search.c",
        "linear_search.java",
        "linear_search.kt",
        "linear_search.scala",
        "linear_search.cs",
        "sentinellinearsearch.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "ternary_search": {
      "location": "code/search/src/ternary_search",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "ternary_search.cpp",
        "ternary_search.php",
        "ternary_search.py",
        "ternary_search.js",
        "ternary_search.java",
        "ternary_search.rs",
        "ternary_search.kt",
        "README.md",
        "ternary_search.c",
        "ternary_search.go"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "interpolation_search": {
      "location": "code/search/src/interpolation_search",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "interpolation_search.go",
        "interpolation_search.php",
        "interpolation_search.cpp",
        "interpolation_search.js",
        "interpolation_search.c",
        "interpolation_search.java",
        "interpolation_search.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "fuzzy_search": {
      "location": "code/search/src/fuzzy_search",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "fuzzy_search.js",
        "fuzzy_search.php"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "exponential_search": {
      "location": "code/search/src/exponential_search",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "exponential_search2.cpp",
        "exponential_search.py",
        "exponential_search.rs",
        "exponential_search.php",
        "exponential_search.cpp",
        "exponential_search.java",
        "README.md",
        "exponential_search.c",
        "exponential_search.js",
        "exponential_search.go",
        "exponential_search.rb"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "fibonacci_search": {
      "location": "code/search/src/fibonacci_search",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "fibonacci_search.js",
        "fibonacci_search.py",
        "fibonacci_search.c",
        "fibonacci_search.swift",
        "fibonacci_search.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "graph_algorithms": {
    "depth_first_search": {
      "location": "code/graph_algorithms/src/depth_first_search",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "dfs.cpp",
        "dfs.kt",
        "dfs.rb",
        "dfs.java",
        "dfs.go",
        "depth_first_search.py",
        "README.md",
        "dfs.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "strongly_connected_components": {
      "location": "code/graph_algorithms/src/strongly_connected_components",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "strongly_connected_components.cpp",
        "strongly_connected_components.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "connected_components": {
      "location": "code/graph_algorithms/src/connected_components",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "connected_components.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "bellman_ford_algorithm": {
      "location": "code/graph_algorithms/src/bellman_ford_algorithm",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "bellman_ford.cpp",
        "bellman_ford.c",
        "bellman_ford.js",
        "bellman_ford.php",
        "bellman_ford.py",
        "bellman_ford_adjacency_list.java",
        "README.md",
        "bellman_ford_edge_list.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "left_view_binary_tree": {
      "location": "code/graph_algorithms/src/left_view_binary_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "left_view_binary_tree.java",
        "left_view_binary.py",
        "left_view_binary_tree.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "biconnected_components": {
      "location": "code/graph_algorithms/src/biconnected_components",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "biconnected_components.cpp",
        "biconnected_components.java",
        "biconnected_components.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "floyd_warshall_algorithm": {
      "location": "code/graph_algorithms/src/floyd_warshall_algorithm",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "floyd_warshall.py",
        "floydwarshall.java",
        "floyd_warshall.cpp",
        "README.md",
        "floydwarshall.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "boruvka_minimum_spanning_tree": {
      "location": "code/graph_algorithms/src/boruvka_minimum_spanning_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "boruvka_minimum_spanning_tree.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "push_relabel": {
      "location": "code/graph_algorithms/src/push_relabel",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "push_relabel.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "graph_coloring": {
      "location": "code/graph_algorithms/src/graph_coloring",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "graph_coloring.cpp",
        "README.md",
        "graph_color_greedy.py",
        "graph_coloring.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "eulerian_path": {
      "location": "code/graph_algorithms/src/eulerian_path",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "eulerian.py",
        "eulerian.java",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "postorder_from_inorder_and_preorder": {
      "location": "code/graph_algorithms/src/postorder_from_inorder_and_preorder",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "inprepost.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "astar_algorithm": {
      "location": "code/graph_algorithms/src/astar_algorithm",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "astar.js"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "count_of_ways_n": {
      "location": "code/graph_algorithms/src/count_of_ways_n",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "count_of_ways_n.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "channel_assignment": {
      "location": "code/graph_algorithms/src/channel_assignment",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "cut_vertices": {
      "location": "code/graph_algorithms/src/cut_vertices",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "cut_vertices.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "steiner_tree": {
      "location": "code/graph_algorithms/src/steiner_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "steiner_tree.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "hamiltonian_cycle": {
      "location": "code/graph_algorithms/src/hamiltonian_cycle",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "hamiltonian_cycle.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "tarjan_algorithm_strongly_connected_components": {
      "location": "code/graph_algorithms/src/tarjan_algorithm_strongly_connected_components",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md",
        "tarjan_algorithm.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "centroid_decomposition": {
      "location": "code/graph_algorithms/src/centroid_decomposition",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "centroid_decompostition.cpp",
        "centroid_decomposition.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "fleury_algorithm_euler_path": {
      "location": "code/graph_algorithms/src/fleury_algorithm_euler_path",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "johnson_algorithm_shortest_path": {
      "location": "code/graph_algorithms/src/johnson_algorithm_shortest_path",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md",
        "johnsons_algo.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "travelling_salesman_mst": {
      "location": "code/graph_algorithms/src/travelling_salesman_mst",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "travelling_salesman.cpp",
        "travelling_salesman.py",
        "travelling_salesman_dp.c",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "vertex_cover": {
      "location": "code/graph_algorithms/src/vertex_cover",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "hamiltonian_path": {
      "location": "code/graph_algorithms/src/hamiltonian_path",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "hamiltonian_path.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "bridges_in_graph": {
      "location": "code/graph_algorithms/src/bridges_in_graph",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md",
        "bridges.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "bipartite_check": {
      "location": "code/graph_algorithms/src/bipartite_check",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "bipartite_check.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "ford_fulkerson_maximum_flow": {
      "location": "code/graph_algorithms/src/ford_fulkerson_maximum_flow",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "ford_fulkerson.cpp",
        "ford_fulkerson_using_bfs.cpp",
        "fordfulkersonusingbfs.java",
        "README.md",
        "ford_fulkerson_using_bfs.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "kuhn_maximum_matching": {
      "location": "code/graph_algorithms/src/kuhn_maximum_matching",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "kuhn_maximum_matching.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "hopcroft_karp_algorithm": {
      "location": "code/graph_algorithms/src/hopcroft_karp_algorithm",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "cycle_directed_graph": {
      "location": "code/graph_algorithms/src/cycle_directed_graph",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "cycle_directed_detection.c",
        "cycle_directed_graph.c",
        "cycle_directed_graph.cpp",
        "cycle_directed_graph.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "bron_kerbosch_algorithm": {
      "location": "code/graph_algorithms/src/bron_kerbosch_algorithm",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "bron_kerbosch.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "matrix_transformation": {
      "location": "code/graph_algorithms/src/matrix_transformation",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "matrix_transformation.swift"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "bridge_tree": {
      "location": "code/graph_algorithms/src/bridge_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "bridge_tree.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "kuhn_munkres_algorithm": {
      "location": "code/graph_algorithms/src/kuhn_munkres_algorithm",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "kuhn_munkres_algorithm.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "shortest_path_k_edges": {
      "location": "code/graph_algorithms/src/shortest_path_k_edges",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "minimum_s_t_cut": {
      "location": "code/graph_algorithms/src/minimum_s_t_cut",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "maximum_bipartite_matching": {
      "location": "code/graph_algorithms/src/maximum_bipartite_matching",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "max_bipartite_matching.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "breadth_first_search": {
      "location": "code/graph_algorithms/src/breadth_first_search",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "bfs.c",
        "breadth_first_search.swift",
        "bfs.cpp",
        "README.md",
        "breadth_first_search.py",
        "bfs.java",
        "bfs.rb"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "cycle_undirected_graph": {
      "location": "code/graph_algorithms/src/cycle_undirected_graph",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "cycle_using_union_find_datastructure.cpp",
        "cyclegraph.cpp",
        "cycle_undirected_graph.py",
        "README.md",
        "checkcycle.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "maximum_edge_disjoint_paths": {
      "location": "code/graph_algorithms/src/maximum_edge_disjoint_paths",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "karger_minimum_cut": {
      "location": "code/graph_algorithms/src/karger_minimum_cut",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md",
        "karger.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "data_structures": {
      "location": "code/graph_algorithms/src/data_structures",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "adjacency_matrix.cpp",
        "adjacency_list.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "bipartite_checking": {
      "location": "code/graph_algorithms/src/bipartite_checking",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "bipartite.cpp",
        "bipartite_bfs.java",
        "bipartite_checking.cpp",
        "bipartite_graph_checked_adjacency_list.java",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "dinic_maximum_flow": {
      "location": "code/graph_algorithms/src/dinic_maximum_flow",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "dinic_maximum_flow.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "min_operation_to_make_gcd_k": {
      "location": "code/greedy_algorithms/src/min_operation_to_make_gcd_k",
      "opengenus_discuss": "",
      "opengenus_iq": "https://iq.opengenus.org/minimum-operations-to-make-gcd-k/",
      "files": [
        "min_operation.cpp",
        "README.md"
      ],
      "updated": "24-05-2020 08:11:06"
    },
    "longest_path_directed_acyclic_graph": {
      "location": "code/graph_algorithms/src/longest_path_directed_acyclic_graph",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md",
        "longest_path_directed_acyclic_graph.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "transitive_closure_graph": {
      "location": "code/graph_algorithms/src/transitive_closure_graph",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "transitive_closure_graph.py",
        "transitive_closure_graph_floyd_warshall.cpp",
        "transitive_closure.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "min_lateness": {
      "location": "code/greedy_algorithms/src/min_lateness",
      "opengenus_discuss": "",
      "opengenus_iq": "https://iq.opengenus.org/scheduling-to-minimize-lateness/",
      "files": [
        "README.md",
        "min_lateness.cpp"
      ],
      "updated": "18-04-2020 08:11:06"
    },
  "theory_of_computation": {
    "nondeterministic_finite_atomaton": {
      "location": "code/theory_of_computation/src/nondeterministic_finite_atomaton",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "nfa.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "deterministic_finite_automaton": {
      "location": "code/theory_of_computation/src/deterministic_finite_automaton",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "dfa.py"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "randomized_algorithms": {
    "birthday_paradox": {
      "location": "code/randomized_algorithms/src/birthday_paradox",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "birthday_paradox.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "shuffle_an_array": {
      "location": "code/randomized_algorithms/src/shuffle_an_array",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "shuffle_an_array.rs",
        "shuffle_library.rb",
        "shuffle_an_array.rb",
        "shuffle_an_array.java",
        "shuffle_an_array.php",
        "README.md",
        "shuffle_an_array.js",
        "shuffle_an_array.cpp",
        "shuffle_an_array.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "random_node_linkedlist": {
      "location": "code/randomized_algorithms/src/random_node_linkedlist",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "randomized_quick_sort": {
      "location": "code/randomized_algorithms/src/randomized_quick_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "randomized_quicksort.cpp",
        "randomized_quicksort.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "reservoir_sampling": {
      "location": "code/randomized_algorithms/src/reservoir_sampling",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "reservoir_sampling.cpp",
        "reservoir_sampling.rs",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "random_from_stream": {
      "location": "code/randomized_algorithms/src/random_from_stream",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "random_number_selection_from_a_stream.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "kth_smallest_element_algorithm": {
      "location": "code/randomized_algorithms/src/kth_smallest_element_algorithm",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "kth_smallest_element_algorithm.cpp",
        "kth_smallest_element_algorithm.c",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "karger_minimum_cut_algorithm": {
      "location": "code/randomized_algorithms/src/karger_minimum_cut_algorithm",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "karger_minimum_cut_algorithm.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "design_pattern": {
    "iterator_pattern": {
      "location": "code/design_pattern/src/iterator_pattern",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "iterator.java",
        "main.java",
        "student.java",
        "class.java",
        "classiterator.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "functional_patterns": {
      "location": "code/design_pattern/src/functional_patterns",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "policy_based_design": {
      "location": "code/design_pattern/src/policy_based_design",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "readme.md",
        "policy_design.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "oop_patterns": {
      "location": "code/design_pattern/src/oop_patterns",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "builder_pattern": {
      "location": "code/design_pattern/src/builder_pattern",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "builder.cs"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "OOP_patterns": {
      "location": "code/design_pattern/src/OOP_patterns",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "__init__.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "scala": {
    "comonad": {
      "location": "code/design_pattern/src/functional_patterns/functional_patterns/scala/src/main/scala/monads/comonad",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "comonad.scala"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "gonad": {
      "location": "code/design_pattern/src/functional_patterns/functional_patterns/scala/src/main/scala/monads/gonad",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "gonad.scala"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "bifunctor": {
      "location": "code/design_pattern/src/functional_patterns/functional_patterns/scala/src/main/scala/functors/bifunctor",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "bifunctor.scala"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "profunctor": {
      "location": "code/design_pattern/src/functional_patterns/functional_patterns/scala/src/main/scala/functors/profunctor",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "profunctor.scala"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "contravariant": {
      "location": "code/design_pattern/src/functional_patterns/functional_patterns/scala/src/main/scala/functors/contravariant",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "contravariant.scala"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "multifunctor": {
      "location": "code/design_pattern/src/functional_patterns/functional_patterns/scala/src/main/scala/functors/multifunctor",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "multifunctor.scala"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "arrow": {
      "location": "code/design_pattern/src/functional_patterns/functional_patterns/scala/src/main/scala/arrows/arrow",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "arrow.scala"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "elimination": {
      "location": "code/mathematical_algorithms/src/gaussian_elimination/scala/src/main/scala/gaussian/elimination",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "gaussianelimination.scala",
        "matrixtype.scala",
        "solution.scala"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "monads": {
    "monad": {
      "location": "code/design_pattern/src/functional_patterns/functional_patterns/scala/src/main/scala/monads/free/monad",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "freemonad.scala"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "functors": {
    "functor": {
      "location": "code/design_pattern/src/functional_patterns/functional_patterns/scala/src/main/scala/functors/applicative/functor",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "applicativefunctor.scala"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "OOP_patterns": {
    "builder": {
      "location": "code/design_pattern/src/OOP_patterns/builder/builder",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "personbuilder.java",
        "person.java",
        "nationality.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "gifts": {
      "location": "code/design_pattern/src/OOP_patterns/factory/gifts",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "car.java",
        "toy.java",
        "gift.java",
        "booze.java",
        "nothing.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "observer": {
      "location": "code/design_pattern/src/OOP_patterns/observer_java/observer",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "observer.java",
        "subject.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "demo": {
      "location": "code/design_pattern/src/OOP_patterns/proxy/demo",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "demo.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "soldiers": {
      "location": "code/design_pattern/src/OOP_patterns/adapter/soldiers",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "general.java",
        "soldier.java",
        "order.java",
        "adaptee.java"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "facade": {
    "tasks": {
      "location": "code/design_pattern/src/OOP_patterns/facade/daily/tasks",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "dailyroutinefacade.java"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "daily": {
    "job": {
      "location": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/job",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "develop.java",
        "leave.java",
        "jobfacade.java",
        "playfifa.java",
        "eatatwork.java",
        "watchyoutubevideos.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "gym": {
      "location": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/gym",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "deadlift.java",
        "squat.java",
        "gymfacade.java",
        "benchpress.java"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "tasks": {
    "routine": {
      "location": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/evening/routine",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "eveningroutinefacade.java",
        "writecode.java",
        "takeashower.java",
        "watchyoutubevideos.java",
        "eat.java"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "observer_java": {
    "network": {
      "location": "code/design_pattern/src/OOP_patterns/observer_java/observer/network",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "fan.java",
        "artist.java"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "proxy": {
    "proxy": {
      "location": "code/design_pattern/src/OOP_patterns/proxy/protection/proxy",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "registeredusers.java",
        "validuser.java",
        "userproxy.java",
        "user.java"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "online_challenges": {
    "rosalind": {
      "location": "code/online_challenges/src/rosalind",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "project_euler": {
      "location": "code/online_challenges/src/project_euler",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "documentation_guide.md",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "codechef": {
      "location": "code/online_challenges/src/codechef",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "mathematical_algorithms": {
    "hill_climbing": {
      "location": "code/mathematical_algorithms/src/hill_climbing",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "hill_climbing.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "sum_of_digits": {
      "location": "code/mathematical_algorithms/src/sum_of_digits",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "sum_of_digits_with_recursion.c",
        "sum_of_digits.go",
        "sum_of_digits.cs",
        "sum_of_digits.rs",
        "sum_of_digits.c",
        "sum_of_digits.java",
        "sum_of_digits.rb",
        "sum_of_digits.php",
        "sum_of_digits.py",
        "sum_of_digits.ex",
        "sum_of_digits.swift",
        "sum_of_digits.cpp",
        "sum_of_digits.js"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "fibonacci_number": {
      "location": "code/mathematical_algorithms/src/fibonacci_number",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "fibonacci_number.cpp",
        "fibonacci_number.scala",
        "fibonacci_number.hs",
        "fibonacci_matrix_multiplication.py",
        "fibonacci_number.go",
        "fibonacci_number.js",
        "fibonacci_number.swift",
        "fibonacci_number.rs",
        "fibonacci_number.c",
        "fibonacci_number.php",
        "fibonacci_number.ex",
        "fibonacci_number.py",
        "fibonacci_number.clj",
        "fibonacci_lucas.py",
        "README.md",
        "fibonacci_matrix_exponentiation.cpp",
        "fibonacci_for_big_numbers.cpp",
        "fibonacci_number.rb",
        "fibonacci_memorized.swift",
        "fibonacci_number.cs",
        "fibonacci_number.java",
        "fast_fibonacci.c",
        "fibonacci_number.erl"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "multiply_polynomial": {
      "location": "code/mathematical_algorithms/src/multiply_polynomial",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "multiply_polynomial.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "jacobi_method": {
      "location": "code/mathematical_algorithms/src/jacobi_method",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "jacobi_method.java",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "lucky_number": {
      "location": "code/mathematical_algorithms/src/lucky_number",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "lucky_number.java",
        "README.md",
        "lucky_number.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "permutation_lexicographic_order": {
      "location": "code/mathematical_algorithms/src/permutation_lexicographic_order",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md",
        "permutation_lexicographic_order.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "integer_conversion": {
      "location": "code/mathematical_algorithms/src/integer_conversion",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "decimal_to_any_base.py",
        "decimal_to_int.go",
        "decimal_to_hex.cpp",
        "decimal_to_bin.cpp",
        "decimal_to_oct.cpp",
        "decimal_to_any_base.js"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "collatz_conjecture_sequence": {
      "location": "code/mathematical_algorithms/src/collatz_conjecture_sequence",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "collatz_conjecture_sequence.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "fractals": {
      "location": "code/mathematical_algorithms/src/fractals",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "simple_julia.cpp",
        "julia_miim.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "fermats_little_theorem": {
      "location": "code/mathematical_algorithms/src/fermats_little_theorem",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "fermats_little_theorem.cpp",
        "fermats_little_theorem.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "pandigital_number": {
      "location": "code/mathematical_algorithms/src/pandigital_number",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "pandigital_number.rb",
        "pandigital_number.c",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "newton_raphson_method": {
      "location": "code/mathematical_algorithms/src/newton_raphson_method",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "newton_raphson.php",
        "newton_raphson.c",
        "README.md",
        "newton_raphson.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "catalan_number": {
      "location": "code/mathematical_algorithms/src/catalan_number",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "catalan_number.js",
        "catalan_number2.py",
        "catalan_number.py",
        "catalan_number_dynamic.cpp",
        "catalan_number.scala",
        "catalan_number.c",
        "catalan_number.java",
        "catalan_number.rb",
        "README.md",
        "catalan_number_recursive.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "pascal_triangle": {
      "location": "code/mathematical_algorithms/src/pascal_triangle",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "pascal_triangle.java",
        "pascal_triangle.cpp",
        "pascal_triangle.go",
        "pascal_triangle.exs",
        "pascal_triangle.c",
        "README.md",
        "pascal_triangle.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "decoding_of_string": {
      "location": "code/mathematical_algorithms/src/decoding_of_string",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "taxicab_numbers": {
      "location": "code/mathematical_algorithms/src/taxicab_numbers",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "taxicab_numbers.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "average_stream_numbers": {
      "location": "code/mathematical_algorithms/src/average_stream_numbers",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "average_stream_numbers.go",
        "average_stream_numbers.c",
        "README.md",
        "average_stream_numbers.py",
        "average_stream_numbers.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "automorphic_numbers": {
      "location": "code/mathematical_algorithms/src/automorphic_numbers",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "automorphic_numbers.java",
        "automorphic_numbers.swift",
        "automorphic_numbers.php",
        "automorphic_numbers.c",
        "automorphic_numbers.cs",
        "automorphic_numbers.py",
        "automorphic_numbers.rb",
        "automorphic_numbers.hs",
        "automorphic_numbers.js",
        "automorphic_numbers.go",
        "automorphic_numbers.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "perfect_number": {
      "location": "code/mathematical_algorithms/src/perfect_number",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "perfect_number.rb",
        "perfect_number.hs",
        "perfect_number.cpp",
        "perfect_number.js",
        "perfect_number.c",
        "perfect_number.py",
        "perfect_number.rs",
        "perfect_number.php",
        ".gitignore",
        "perfect_number.java",
        "README.md",
        "perfect_number_list.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "exponentiation_power": {
      "location": "code/mathematical_algorithms/src/exponentiation_power",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "exponentiation_power.c",
        "modulo_exponentation_power.cpp",
        "exponentiation_power.cpp",
        "README.md",
        "exponentiation_power.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "count_digits": {
      "location": "code/mathematical_algorithms/src/count_digits",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "count_digits.cpp",
        "count_digits.c",
        "count_digits.hs",
        "count_digits.java",
        "count_digits.js",
        "count_digits.swift",
        "count_digits.py",
        "count_digits.cs",
        "count_digits.go",
        "counts_digits.rb"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "smallest_digit_in_number": {
      "location": "code/mathematical_algorithms/src/smallest_digit_in_number",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "smallest_digit_in_number.rb",
        "smallest_digit_in_number.java",
        "smallest_digit_in_number.cpp",
        "smallest_digit_in_number.py",
        "smallest_digit_in_number.php",
        "smallest_digit_in_number.cs",
        "smallest_digit_in_number.hs",
        "smallest_digit_in_number.js",
        "smallest_digit_in_number.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "integer_to_roman": {
      "location": "code/mathematical_algorithms/src/integer_to_roman",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "integer_to_roman.py",
        "integer_to_roman.js",
        "integer_to_roman.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "std": {
      "location": "code/mathematical_algorithms/src/std",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "std.c",
        "std.js",
        "std.py",
        "std.go",
        "std.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "euler_totient": {
      "location": "code/mathematical_algorithms/src/euler_totient",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "euler_totient_sieve.py",
        "euler_totient.c",
        "euler_totient.java",
        "euler_totient.py",
        "euler_totient_sieve.cpp",
        "euler_totient.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "russian_peasant_multiplication": {
      "location": "code/mathematical_algorithms/src/russian_peasant_multiplication",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "russian_peasant_multiplication.py",
        "russian_peasant_multiplication.cpp",
        "russian_peasant_multiplication.js",
        "russian_peasant_multiplication.cs",
        "russian_peasant_multiplication.rs",
        "russian_peasant_multiplication.php",
        "README.md",
        "russian_peasant_multiplication.c",
        "russian_peasant_multiplication.go"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "gcd_and_lcm": {
      "location": "code/mathematical_algorithms/src/gcd_and_lcm",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "gcd_and_lcm.cpp",
        "gcd_and_lcm.erl",
        "gcd_and_lcm.py",
        "gcd_and_lcm.go",
        "gcd_and_lcm.php",
        "gcd_and_lcm.ex",
        "gcd_and_lcm.scala",
        "gcd_and_lcm.cs",
        "gcd_and_lcm.java",
        "gcd_and_lcm.c",
        "gcd_and_lcm.js"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "newman_conway": {
      "location": "code/mathematical_algorithms/src/newman_conway",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "newman_conway_sequence.cpp",
        "README.md",
        "newman_conway_sequence.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "replace_0_with_5": {
      "location": "code/mathematical_algorithms/src/replace_0_with_5",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "replace_0_with_5.java",
        "replace_0_with_5.py",
        "replace_0_with_5.go",
        "replace_0_with_5.js",
        "replace_0_with_5.c",
        "replace_0_with_5.cs",
        "replace_0_with_5.cpp",
        "0_to_5_efficent.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "diophantine": {
      "location": "code/mathematical_algorithms/src/diophantine",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "diophantine.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "armstrong_numbers": {
      "location": "code/mathematical_algorithms/src/armstrong_numbers",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "armstrong_numbers.cpp",
        "armstrong_numbers.c",
        "armstrong_numbers.py",
        "armstrong_numbers.cs",
        "armstrong_numbers.rb",
        "README.md",
        "armstrong_numbers.java",
        "armstrong_number.php",
        "armstrong_numbers.go",
        "armstrong_numbers.js"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "check_is_square": {
      "location": "code/mathematical_algorithms/src/check_is_square",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "check_is_square.cs",
        "check_is_square.rs",
        "check_is_square.py",
        "check_is_square.swift",
        "check_is_square.java",
        "check_is_square.c",
        "check_is_square.scala",
        "check_is_square.cpp",
        "check_is_square.php",
        "check_is_square.ruby",
        "check_is_square.js",
        "check_is_square.go"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "fast_inverse_sqrt": {
      "location": "code/mathematical_algorithms/src/fast_inverse_sqrt",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "fast_inverse_sqrt.py",
        "fast_inverse_sqrt.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "greatest_digit_in_number": {
      "location": "code/mathematical_algorithms/src/greatest_digit_in_number",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "greatest_digit_in_number.cpp",
        "greatest_digit_in_number.php",
        "greatest_digit_in_number.c",
        "greatest_digit_in_number.js",
        "greatest_digit_in_number.hs",
        "greatest_digit_in_number.rb",
        "greatest_digit_in_number.java",
        "greatest_digit_in_number.py",
        "greatest_digit_in_number.cs"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "log_of_factorial": {
      "location": "code/mathematical_algorithms/src/log_of_factorial",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "log_of_factorial.py",
        "log_of_factorial.java",
        "log_of_factorial.c",
        "log_of_factorial.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "convolution": {
      "location": "code/mathematical_algorithms/src/convolution",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "convolution.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "add_polynomials": {
      "location": "code/mathematical_algorithms/src/add_polynomials",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "add_polynomials.c",
        "add_polynomials.cpp",
        "add_polynomials.go",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "fast_fourier_transform": {
      "location": "code/mathematical_algorithms/src/fast_fourier_transform",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "fast_fourier_transform.c",
        "fast_fourier_transform.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "largrange_polynomial": {
      "location": "code/mathematical_algorithms/src/largrange_polynomial",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "lagrange_polynomial.java",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "shuffle_array": {
      "location": "code/mathematical_algorithms/src/shuffle_array",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "shuffle_array.rb",
        "shuffle_array.c",
        "shuffle_array.cpp",
        "shuffle_array.js",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "newton_polynomial": {
      "location": "code/mathematical_algorithms/src/newton_polynomial",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "newton_polynomial.java",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "coprime_numbers": {
      "location": "code/mathematical_algorithms/src/coprime_numbers",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "coprime_numbers.js",
        "coprime_numbers.cs",
        "coprime_numbers.cpp",
        "coprime_numbers.go",
        "coprime_numbers.rb",
        "coprime_numbers.py",
        "coprime_numbers.java",
        "coprime_numbers.c",
        "coprime_numbers.rs"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "lexicographic_string_rank": {
      "location": "code/mathematical_algorithms/src/lexicographic_string_rank",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "lexicographic_string_rank.c",
        "lexicographic_string_rank.cpp",
        "lexicographic_string_rank.java",
        "README.md",
        "lexicographic_string_rank.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "sieve_of_atkin": {
      "location": "code/mathematical_algorithms/src/sieve_of_atkin",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "sieve_of_atkin.c",
        "sieve_of_atkin.cpp",
        "sieve_of_atkin.java",
        "sieve_of_atkin.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "steepest_descent": {
      "location": "code/mathematical_algorithms/src/steepest_descent",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "steepest_descent.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "divided_differences": {
      "location": "code/mathematical_algorithms/src/divided_differences",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "divided_differences.java",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "simpsons_rule": {
      "location": "code/mathematical_algorithms/src/simpsons_rule",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "simpsons_rule.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "binomial_coefficient": {
      "location": "code/mathematical_algorithms/src/binomial_coefficient",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "binomial_coefficient.c",
        "binomial_coefficient.go",
        "binomial_coefficient.cpp",
        "binomial_coefficient.java",
        "binomial_coefficient.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "gaussian_elimination": {
      "location": "code/mathematical_algorithms/src/gaussian_elimination",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "gaussian_elimination.java",
        "gaussian_elimination.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "prime_numbers_of_n": {
      "location": "code/mathematical_algorithms/src/prime_numbers_of_n",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "prime_numbers_of_n.cpp",
        "prime_numbers_of_n.c",
        "prime_numbers_of_n.js",
        "prime_numbers_of_n.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "2sum": {
      "location": "code/mathematical_algorithms/src/2sum",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "2sum.cpp",
        "2sum.rb",
        "2sum.py",
        "2sum.rs",
        "2sum.java",
        "2sum.c",
        "2sum.js",
        "2sum.go"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "count_trailing_zeroes": {
      "location": "code/mathematical_algorithms/src/count_trailing_zeroes",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "count_trailing_zeroes_factorial.cpp",
        "count_trailing_zeroes_factorial.java",
        "count_trailing_zeroes.c",
        "count_trailing_zeroes_factorial.py",
        "count_trailing_zeroes.scala",
        "count_trailing_zeroes_factorial.js"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "tribonacci_numbers": {
      "location": "code/mathematical_algorithms/src/tribonacci_numbers",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "tribonacci_numbers.cpp",
        "tribonacci_numbers.java",
        "tribonacci_numbers.js",
        "tribonacci_numbers.c",
        "tribonacci_numbers.rs",
        "tribonacci_numbers.go",
        "tribonnaci.java",
        "tribonacci_numbers.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "segmented_sieve_of_eratosthenes": {
      "location": "code/mathematical_algorithms/src/segmented_sieve_of_eratosthenes",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "segmented_sieve_of_eratosthenes.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "poisson_sample": {
      "location": "code/mathematical_algorithms/src/poisson_sample",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "poisson_sample.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "horner_polynomial_evaluation": {
      "location": "code/mathematical_algorithms/src/horner_polynomial_evaluation",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "horner_polynomial_evaluation.cpp",
        "horner_polynomial_evaluation.java",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "amicable_numbers": {
      "location": "code/mathematical_algorithms/src/amicable_numbers",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "amicable_numbers.go",
        "amicable_numbers.rb",
        "amicable_numbers.rs",
        "amicable_numbers.js",
        "amicable_numbers.java",
        "amicable_numbers.cs",
        "amicable_numbers.cpp",
        "amicable_numbers.c",
        "amicable_numbers.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "reverse_number": {
      "location": "code/mathematical_algorithms/src/reverse_number",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "reverse_number.java",
        "reverse_number.rb",
        "reverse_number.swift",
        "reverse_number.py",
        "reverse_a_number.c",
        "reverse_number.c",
        "reverse_number.php",
        "reverse_number.hs",
        "reverse_number.cpp",
        "reverse_number.cs",
        "reverse_number.go",
        "reverse_number.js",
        "reverse_number_recursion.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "prime_factors": {
      "location": "code/mathematical_algorithms/src/prime_factors",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "prime_factors.cpp",
        "prime_factors.go",
        "prime_factors.java",
        "prime_factors.c",
        "sum_of_primes.cpp",
        "prime_factors.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "delannoy_number": {
      "location": "code/mathematical_algorithms/src/delannoy_number",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "delannoy_number.c",
        "delannoy_number.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "dfa_division": {
      "location": "code/mathematical_algorithms/src/dfa_division",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "square_free_number": {
      "location": "code/mathematical_algorithms/src/square_free_number",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "square_free_number.c",
        "squarefreenumber.java",
        "square_free_number.cpp",
        "square_free_number.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "babylonian_method": {
      "location": "code/mathematical_algorithms/src/babylonian_method",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "babylonian_method.c",
        "babylonian_method.go",
        "babylonian_method.py",
        "babylonian_method.cpp",
        "babylonian_method.js",
        "README.md",
        "babylonian_method.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "derangements": {
      "location": "code/mathematical_algorithms/src/derangements",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "derangements.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "lucas_theorem": {
      "location": "code/mathematical_algorithms/src/lucas_theorem",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "lucas_theorem.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "tridiagonal_matrix": {
      "location": "code/mathematical_algorithms/src/tridiagonal_matrix",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "tridiagonal_matrix.java",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "next_larger_number": {
      "location": "code/mathematical_algorithms/src/next_larger_number",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "next_larger_number.cpp",
        "next_larger_number.php",
        "next_larger_number.py",
        "next_larger_number.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "tower_of_hanoi": {
      "location": "code/mathematical_algorithms/src/tower_of_hanoi",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "tower_of_hanoi_binary_solution.c",
        "tower_of_hanoi.hs",
        "tower_of_hanoi.ml",
        "tower_of_hanoi.py",
        "tower_of_hanoi.js",
        "tower_of_hanoi.go",
        "tower_of_hanoi.java",
        "tower_of_hanoi.scala",
        "tower_of_hanoi.cpp",
        "tower_of_hanoi_iterative.c",
        "README.md",
        "tower_of_hanoi.c",
        "tower_of_hanoi.rs"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "modular_inverse": {
      "location": "code/mathematical_algorithms/src/modular_inverse",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "modular_inverse.rb",
        "modular_inverse.cpp",
        "modular_inverse.py",
        "modular_inverse.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "pythagorean_triplet": {
      "location": "code/mathematical_algorithms/src/pythagorean_triplet",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "pythagorean_triplet.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "reverse_factorial": {
      "location": "code/mathematical_algorithms/src/reverse_factorial",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "reverse_factorial.js",
        "reverse_factorial.rb",
        "reverse_factorial.go",
        "reverse_factorial.c",
        "reverse_factorial.java",
        "reverse_factorial.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "sieve_of_eratosthenes": {
      "location": "code/mathematical_algorithms/src/sieve_of_eratosthenes",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "sieve_of_eratosthenes.py",
        "sieve_of_eratosthenes_compact.cpp",
        "sieve_of_eratosthenes.java",
        "sieve_of_eratosthenes_linear.cpp",
        "sieve_of_eratosthenes.php",
        "sieve_of_eratosthenes.hs",
        "sieve_of_eratosthenes.go",
        "sieve_of_eratosthenes.cs",
        "sieve_of_eratosthenes.c",
        "README.md",
        "sieve_of_eratosthenes.js",
        "sieve_of_eratosthenes.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "minimum_operations_elements_equal": {
      "location": "code/mathematical_algorithms/src/minimum_operations_elements_equal/",
      "opengenus_discuss": "",
      "opengenus_iq": "https://iq.opengenus.org/make-elements-equal/",
      "files": [
        "EqualizeEveryone.java"
      ],
      "updated": "29-04-2020 19:25:00"
    },
    "maximum_perimeter_triangle": {
      "location": "code/mathematical_algorithms/src/maximum_perimeter_triangle/",
      "opengenus_discuss": "",
      "opengenus_iq": "https://iq.opengenus.org/maximum-perimeter-of-triangle/",
      "files": [
        "PerimeterTriangle.java"
      ],
      "updated": "29-04-2020 19:43:00"
    }
  },
  "main": {
    "structures": {
      "location": "code/mathematical_algorithms/src/gaussian_elimination/scala/src/main/scala/structures",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "matrix.scala",
        "epsilon.scala",
        "regularmatrix.scala"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "unclassified": {
    "josephus_problem": {
      "location": "code/unclassified/src/josephus_problem",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "josephus.go",
        "josephus.c",
        "josephus.py",
        "README.md",
        "josephus.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "minimum_subarray_size_with_degree": {
      "location": "code/unclassified/src/minimum_subarray_size_with_degree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "minsubarraysizewithdegree.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "spiral_print": {
      "location": "code/unclassified/src/spiral_print",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "spiral_print.c",
        "spiral_print.py",
        "spiral_print.go",
        "README.md",
        "spiral_print.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "fifteen_puzzle": {
      "location": "code/unclassified/src/fifteen_puzzle",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "readme.md",
        "makefile",
        "log.txt",
        "fifteen.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "average": {
      "location": "code/unclassified/src/average",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "readme.md",
        "average.rb",
        "average.go",
        "average.py",
        "average.js",
        "average.erl",
        "average.swift",
        "average.rs",
        "average.es6.js",
        "average.ex",
        "average.cpp",
        "average.c",
        "average.php",
        "average.cs",
        "average.java",
        "average.sh",
        "average.scala",
        "average.class"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "tokenizer": {
      "location": "code/unclassified/src/tokenizer",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "tokenizer.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "no_operator_addition": {
      "location": "code/unclassified/src/no_operator_addition",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "addition.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "utilities": {
      "location": "code/unclassified/src/utilities",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "convert2mp3.sh",
        "download_link.sh"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "optimized_fibonacci": {
      "location": "code/unclassified/src/optimized_fibonacci",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "optimized_fibonacci.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "biggest_suffix": {
      "location": "code/unclassified/src/biggest_suffix",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "readme.md",
        "biggest_suffix.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "majority_element": {
      "location": "code/unclassified/src/majority_element",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "majority_element.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "smallest_number_to_the_left": {
      "location": "code/unclassified/src/smallest_number_to_the_left",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "smallest.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "lapindrom_checker": {
      "location": "code/unclassified/src/lapindrom_checker",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "lapindrome_checker.py",
        "lapindrome_checker.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "biggest_of_n_numbers": {
      "location": "code/unclassified/src/biggest_of_n_numbers",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "biggest_of_n.js",
        "readme.md",
        "biggest_of_n_numbers2.cpp",
        "biggest_of_n_numbers.java",
        "biggest_of_n_numbers.c",
        "biggest_of_n_numbers.py",
        "biggest_of_n_numbers.cpp",
        "biggest_of_n_numbers.cs"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "jaccard_similarity": {
      "location": "code/unclassified/src/jaccard_similarity",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "jaccard.java",
        "README.md",
        "jaccard.c",
        "jaccard.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "paint_fill": {
      "location": "code/unclassified/src/paint_fill",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "paint_fill.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "unique_number": {
      "location": "code/unclassified/src/unique_number",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "unique_number.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "magic_square": {
      "location": "code/unclassified/src/magic_square",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "magic_square.php",
        "magic_square.c",
        "magic_square.swift",
        "magic_square.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "leap_year": {
      "location": "code/unclassified/src/leap_year",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "leap_year.cs",
        "readme.txt",
        "leap_year.c",
        "leap_year.nim",
        "leap_year.java",
        "leap_year.rs",
        "leap_year.go",
        "leap_year.cpp",
        "leap_year.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "split_list": {
      "location": "code/unclassified/src/split_list",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "split_array.js",
        "split_list.py"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "divide_conquer": {
    "inversion_count": {
      "location": "code/divide_conquer/src/inversion_count",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "count_inversions.c",
        "inversion_count.cpp",
        "inversion_count.java",
        "inversion_count.py",
        "inversion_count.js",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "warnock_algorithm": {
      "location": "code/divide_conquer/src/warnock_algorithm",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "warnock_algorithm.pde"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "factorial": {
      "location": "code/divide_conquer/src/factorial",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "factorial.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "tournament_method_to_find_min_max": {
      "location": "code/divide_conquer/src/tournament_method_to_find_min_max",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "tournament_method_to_find_min_max.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "merge_sort_using_divide_and_conquer": {
      "location": "code/divide_conquer/src/merge_sort_using_divide_and_conquer",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "merge_sort_using_divide_and_conquer.cpp",
        "merge_sort_using_divide_and_conquer.java",
        "inversions.c",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "strassen_matrix_multiplication": {
      "location": "code/divide_conquer/src/strassen_matrix_multiplication",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "main.cpp",
        "strassen.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "x_power_y": {
      "location": "code/divide_conquer/src/x_power_y",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "x_power_y.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "maximum_contiguous_subsequence_sum": {
      "location": "code/divide_conquer/src/maximum_contiguous_subsequence_sum",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "maximum_contiguous_subsequence_sum.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "closest_pair_of_points": {
      "location": "code/divide_conquer/src/closest_pair_of_points",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "closest_pair.cpp",
        "closest_pair.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "karatsuba_multiplication": {
      "location": "code/divide_conquer/src/karatsuba_multiplication",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "multiply.java",
        "karatsuba_multiplication.py",
        "karatsubamultiply.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "selection_algorithms": {
    "median_of_medians": {
      "location": "code/selection_algorithms/src/median_of_medians",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "median_of_medians.py",
        "median_of_medians.hs",
        "median_of_medians.c"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "cellular_automaton": {
    "conways_game_of_life": {
      "location": "code/cellular_automaton/src/conways_game_of_life",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "gameoflife.hs",
        "life.cpp",
        "life.c",
        "conway.java",
        "life.rb",
        "life.go",
        "life.py",
        "README.md",
        "game_of_life_c_sdl.c",
        "conways_game_of_life.rb"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "genetic_algorithm": {
      "location": "code/cellular_automaton/src/genetic_algorithm",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "genetic.cpp",
        "genetic_algorithm.go",
        "genetic_algorithm.java",
        "genetic_algorithm.py",
        "genetic_algorithm2.py",
        "genetic_algorithm.js"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "brians_brain": {
      "location": "code/cellular_automaton/src/brians_brain",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "von_neumann_cellular_automata": {
      "location": "code/cellular_automaton/src/von_neumann_cellular_automata",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "von_neumann_cellular_automata.c",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "elementary_cellular_automata": {
      "location": "code/cellular_automaton/src/elementary_cellular_automata",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "elementarycellularautomaton.java",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "langtons_ant": {
      "location": "code/cellular_automaton/src/langtons_ant",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "langtonant.py",
        "langtonant.html",
        "langtonant.cpp",
        "langtonant.java",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "nobili_cellular_automata": {
      "location": "code/cellular_automaton/src/nobili_cellular_automata",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "string_algorithms": {
    "z_algorithm": {
      "location": "code/string_algorithms/src/z_algorithm",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "z_algorithm_z_array.cpp",
        "z_algorithm.py",
        "z_algorithm.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "levenshtein_distance": {
      "location": "code/string_algorithms/src/levenshtein_distance",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "levenshteindistance.java",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "palindrome_substring": {
      "location": "code/string_algorithms/src/palindrome_substring",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "palindrome_substring.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "anagram_search": {
      "location": "code/string_algorithms/src/anagram_search",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "anagram_search.swift",
        "anagram.scala",
        "anagram_search.js",
        "anagram_search.go",
        "anagram_search.java",
        "anagram_search.cs",
        "anagram_search.py",
        "anagram_search.rb",
        "anagram_search.c",
        "README.md",
        "anagram_search.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "kmp_algorithm": {
      "location": "code/string_algorithms/src/kmp_algorithm",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "kmp.py",
        "README.md",
        "kmp_algorithm.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "password_strength_checker": {
      "location": "code/string_algorithms/src/password_strength_checker",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "pw_checker.js",
        "pw_checker.cpp",
        "pw_checker.java",
        "pw_checker.cs",
        "README.md",
        "pw_checker.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "rabin_karp_algorithm": {
      "location": "code/string_algorithms/src/rabin_karp_algorithm",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "rabin_karp.c",
        "rabinkarp.java",
        "README.md",
        "rabin_karp.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "palindrome_checker": {
      "location": "code/string_algorithms/src/palindrome_checker",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "palindrome.purs",
        "palindrome.cr",
        "palindrome.clj",
        "palindrome.cs",
        "palindrome.java",
        "palindrome.hs",
        "palindrome.rs",
        "palindrome.py",
        "palindrome.c",
        "palindrome.ex",
        "palindrome.erl",
        "palindrome.cpp",
        "palindrome.lua",
        "palindrome.sh",
        "palindrome.rb",
        "palindrome.kt",
        "palindrome.php",
        "palindrome.swift",
        "palindrome.go",
        "palindrome.js"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "manachar_algorithm": {
      "location": "code/string_algorithms/src/manachar_algorithm",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "manachar_longest_palindromic_subs.py",
        "manachar_longest_palindromic_subs.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "morse_code": {
      "location": "code/string_algorithms/src/morse_code",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "morsecode.php",
        "morsecode.js",
        "morsecode.py",
        "morsecode.go",
        "morsecode.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "trie_pattern_search": {
      "location": "code/string_algorithms/src/trie_pattern_search",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "trie.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "boyer_moore_algorithm": {
      "location": "code/string_algorithms/src/boyer_moore_algorithm",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "boyer_moore_algorithm.c",
        "boyer_moore_algorithm.cpp",
        "README.md",
        "boyer_moore_algorithm2.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "remove_dups": {
      "location": "code/string_algorithms/src/remove_dups",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "remove_dups.js",
        "remove_dups.cpp",
        "remove_dups.rs",
        "remove_dumps.py",
        "remove_dups.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "kasai_algorithm": {
      "location": "code/string_algorithms/src/kasai_algorithm",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "kasai_algorithm.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "lipogram_checker": {
      "location": "code/string_algorithms/src/lipogram_checker",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "lipogram_checker.py",
        "lipogram_checker.cs",
        "lipogram_checker.cpp",
        "lipogram_checker.js"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "aho_corasick_algorithm": {
      "location": "code/string_algorithms/src/aho_corasick_algorithm",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "aho_corasick_algorithm2.cpp",
        "README.md",
        "aho_corasick_algorithm.cpp",
        "aho_corasick_algorithm.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "longest_palindromic_substring": {
      "location": "code/string_algorithms/src/longest_palindromic_substring",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "longest_palindromic_substring.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "naive_pattern_search": {
      "location": "code/string_algorithms/src/naive_pattern_search",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "naive_pattern_search.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "arithmetic_on_large_numbers": {
      "location": "code/string_algorithms/src/arithmetic_on_large_numbers",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "string_factorial.cpp",
        "string_multiplication.cpp",
        "string_subtract.cpp",
        "string_addition.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "finite_automata": {
      "location": "code/string_algorithms/src/finite_automata",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "searchstringusingdfa.rs",
        "searchstringusingdfa.java",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "pangram_checker": {
      "location": "code/string_algorithms/src/pangram_checker",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "pangram_checker.c",
        "pangram.cpp",
        "pangram_checker.php",
        "pangram_checker.py",
        "pangram_checker.go",
        "pangram_checker.m",
        "pangram.java",
        "pangram_checker.js",
        "pangram.rb",
        "README.md",
        "pangram_checker.swift"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "backtracking": {
    "partitions_of_number": {
      "location": "code/backtracking/src/partitions_of_number",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "partitions_of_number.rs",
        "partitions_of_number.go",
        "README.md",
        "partitions_of_number.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "number_of_ways_in_maze": {
      "location": "code/backtracking/src/number_of_ways_in_maze",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "no_of_ways_in_maze.java",
        "noofwaysinmaze.c",
        "no_of_ways_in_maze.rs",
        "number_of_ways_in_maze.cpp",
        "README.md",
        "no_of_ways_in_maze.go"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "m_coloring_problem": {
      "location": "code/backtracking/src/m_coloring_problem",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "m_coloring.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "algorithm_x": {
      "location": "code/backtracking/src/algorithm_x",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "algo_x.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "knight_tour": {
      "location": "code/backtracking/src/knight_tour",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "knight_tour.java",
        "knight_tour.rs",
        "knight_tour_withoutbt.c",
        "knight_tour.cpp",
        "knight_tour.go",
        "knight_tour.c",
        "knight_tour.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "rat_in_a_maze": {
      "location": "code/backtracking/src/rat_in_a_maze",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "rat_in_a_maze.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "crossword_puzzle": {
      "location": "code/backtracking/src/crossword_puzzle",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "crosswordpuzzle.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "subset_sum": {
      "location": "code/backtracking/src/subset_sum",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "subsetsum.java",
        "subset_sum.cpp",
        "subset_sum_duplicates.py",
        "subsetsum.py",
        "subset_sum.c",
        "subset_sum.go",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "powerset": {
      "location": "code/backtracking/src/powerset",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "powerset.java",
        "power_set.c",
        "powerset.go"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "sudoku_solve": {
      "location": "code/backtracking/src/sudoku_solve",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "sudoku.rs",
        "README.md",
        "sudoku_solve.py",
        "sudokusolve.cpp",
        "sudokusolve.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "permutations_of_string": {
      "location": "code/backtracking/src/permutations_of_string",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "permutations_of_string.c",
        "permutations_of_string.go",
        "permutations_of_string.kt",
        "permutations_of_string_itertools.py",
        "permutations_of_string_stl.cpp",
        "permutations_of_string.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "partitions_of_set": {
      "location": "code/backtracking/src/partitions_of_set",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "set_partitions.cpp",
        "set_partitions.go",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "n_queen": {
      "location": "code/backtracking/src/n_queen",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "nqueen.go",
        "nqueen_bitimp.cpp",
        "nqueen.hs",
        "nqueen.py",
        "nqueen_backtracking.rs",
        "nqueen_backtracking.cpp",
        "README.md",
        "nqueen_bitset.cpp",
        "nqueen.java",
        "n_queen.c",
        "nqueen_bit.go"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "bit_manipulation": {
    "sum_binary_numbers": {
      "location": "code/bit_manipulation/src/sum_binary_numbers",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "sum_binary_numbers.c",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "maximum_xor_value": {
      "location": "code/bit_manipulation/src/maximum_xor_value",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "max_xor_value.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "xor_swap": {
      "location": "code/bit_manipulation/src/xor_swap",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "xor_swap.c",
        "xor_swap.py",
        "xor_swap.cpp",
        "xorswap.go",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "count_set_bits": {
      "location": "code/bit_manipulation/src/count_set_bits",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "count_set_bits.cs",
        "count_set_bits.c",
        "count_set_bits.cpp",
        "countsetbits.java",
        "count_set_bits_lookup_table.cpp",
        "countsetbits.js",
        "count_set_bits.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "lonely_integer": {
      "location": "code/bit_manipulation/src/lonely_integer",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "lonely_integer.rs",
        "lonelyinteger.cpp",
        "lonelyint.java",
        "lonelyinteger.py",
        "lonelyinteger.go",
        "README.md",
        "lonelyinteger.c",
        "lonelyint.js"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "thrice_unique_number": {
      "location": "code/bit_manipulation/src/thrice_unique_number",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "uniquenumber.py",
        "thrice_unique_number.js",
        "thriceuniquenumber.java",
        "threeunique.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "magic_number": {
      "location": "code/bit_manipulation/src/magic_number",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "magic_number.java",
        "magic_number.py",
        "README.md",
        "magic_number.c",
        "nth_magic_number.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "hamming_distance": {
      "location": "code/bit_manipulation/src/hamming_distance",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "hamming_distance.java",
        "hamming_distance.cpp",
        "hamming_distance.go",
        "hamming_distance.py",
        "README.md",
        "hamming_distance2.py",
        "hamming_distance.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "addition_using_bits": {
      "location": "code/bit_manipulation/src/addition_using_bits",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "addition_using_bits.cpp",
        "bitwise_addition.js",
        "bitwise_addition.cs",
        "addition_using_bits.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "byte_swapper": {
      "location": "code/bit_manipulation/src/byte_swapper",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "byteswapper.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "invert_bit": {
      "location": "code/bit_manipulation/src/invert_bit",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "invert_bit.c",
        "invert_bit.cpp",
        "invert_bit.js",
        "invert_bit.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "power_of_2": {
      "location": "code/bit_manipulation/src/power_of_2",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "power_of_2.rs",
        "power_of_2.go",
        "power_of_2.jl",
        "power_of_2.cpp",
        "power_of_2.c",
        "power_of_2.py",
        "powerof2.cs",
        "power_of_2.js",
        "powerof2.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "sum_equals_xor": {
      "location": "code/bit_manipulation/src/sum_equals_xor",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "sum_equals_xor.py",
        "sum_equals_xor.c",
        "sum_equals_xor.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "subset_generation": {
      "location": "code/bit_manipulation/src/subset_generation",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "subsetgeneratorusingbit.cpp",
        "subset_mask_generator.cpp",
        "README.md",
        "subsetsum.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "convert_number_binary": {
      "location": "code/bit_manipulation/src/convert_number_binary",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "convert_number_binary.cpp",
        "convert_number_binary.c",
        "inttobinary.py",
        "binary_to_int.py",
        "convert_number_binary.js",
        "convert_number_binary.php",
        "convertnumberbinary.java",
        "convert_number_binary.hs",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "bit_division": {
      "location": "code/bit_manipulation/src/bit_division",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "bitdivision.c",
        "bitdivison.py",
        "bitdivision.go",
        "bitdivision.js",
        "bitdivision.java",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "flip_bits": {
      "location": "code/bit_manipulation/src/flip_bits",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "flippingbits.py",
        "flippingbits.c",
        "README.md",
        "flipbits.java",
        "flippingbits.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "twice_unique_number": {
      "location": "code/bit_manipulation/src/twice_unique_number",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "two_unique_numbers.c",
        "README.md",
        "two_unique_numbers.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "networking": {
    "packetsniffer": {
      "location": "code/networking/src/packetsniffer",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "packetsniffer.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "determine_endianess": {
      "location": "code/networking/src/determine_endianess",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "determine_endianess.c"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "compression": {
    "lossless_compression": {
      "location": "code/compression/src/lossless_compression",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "lossy_compression": {
      "location": "code/compression/src/lossy_compression",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "computational_geometry": {
    "cohen_sutherland_lineclip": {
      "location": "code/computational_geometry/src/cohen_sutherland_lineclip",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "lineclip.c",
        "README.md",
        "cohenSutherlandAlgorithm.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "sphere_tetrahedron_intersection": {
      "location": "code/computational_geometry/src/sphere_tetrahedron_intersection",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "luvector.hpp",
        "sphere_tetrahedron_intersection.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "halfplane_intersection": {
      "location": "code/computational_geometry/src/halfplane_intersection",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "halfplane_intersection.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "dda_line": {
      "location": "code/computational_geometry/src/dda_line",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "dda_line.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "jarvis_march": {
      "location": "code/computational_geometry/src/jarvis_march",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "jarvis_march.cpp",
        "jarvis_march_alternative.cpp",
        "jarvis_march.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "bresenham_circle": {
      "location": "code/computational_geometry/src/bresenham_circle",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "bresenham_circle.cpp",
        "graphics.h"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "graham_scan": {
      "location": "code/computational_geometry/src/graham_scan",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "grahamscan.java",
        "graham_scan_alternative.cpp",
        "graham_scan.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "chans_algorithm": {
      "location": "code/computational_geometry/src/chans_algorithm",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "chans_algorithm.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "2d_separating_axis_test": {
      "location": "code/computational_geometry/src/2d_separating_axis_test",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "sat.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "bresenham_line": {
      "location": "code/computational_geometry/src/bresenham_line",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "bresenham_line.py",
        "bresenham_line.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "area_of_polygon": {
      "location": "code/computational_geometry/src/area_of_polygon",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "area_of_polygon.c",
        "area_of_polygon.cpp",
        "area_of_polygon.py",
        "areaofpolygon.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "sutherland_hodgeman_clipping": {
      "location": "code/computational_geometry/src/sutherland_hodgeman_clipping",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "sutherland.cpp",
        "README.md",
        "sutherland.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "distance_between_points": {
      "location": "code/computational_geometry/src/distance_between_points",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "distance_between_points.py",
        "distance_between_points.js",
        "distance_between_points.cpp",
        "distance_between_points.go",
        "README.md",
        "distancebetweenpoints.java",
        "distance_between_points.rs",
        "distance_between_points.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "quickhull": {
      "location": "code/computational_geometry/src/quickhull",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "test_data_soln.txt",
        "quickhull_alternative.cpp",
        "test_data.csv",
        "quickhull.cpp",
        "quickhull.java",
        "test_data_soln.png",
        "README.md",
        "quickhull.hs"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "2d_line_intersection": {
      "location": "code/computational_geometry/src/2d_line_intersection",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "line.java",
        "line.cpp",
        "line.js",
        "line.c",
        "line2dintersection.hs",
        "line.rb",
        "line.cs",
        "README.md",
        "line.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "axis_aligned_bounding_box_collision": {
      "location": "code/computational_geometry/src/axis_aligned_bounding_box_collision",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "axis_aligned_bounding_box_collision.go",
        "axis_aligned_bounding_box_collision.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "area_of_triangle": {
      "location": "code/computational_geometry/src/area_of_triangle",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "area_of_triangle.go",
        "area_of_triangle.cpp",
        "areaoftriangle.java",
        "area_of_triangle.rs",
        "area_of_triangle.js",
        "area_of_triangle.py",
        "area_of_triangle.c"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "concurrency": {
    "monitors_system_v": {
      "location": "code/operating_system/src/concurrency/monitors/monitors_system_v",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "monitors.c",
        "monitors.h",
        "main.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "peterson_algorithm_in_c": {
      "location": "code/operating_system/src/concurrency/peterson_algorithm_for_mutual_exclusion/peterson_algorithm_in_c",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "peterson_algo_mutual_exclusion_in_c.c",
        "mythreads.h"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "operating_system": {
    "shell": {
      "location": "code/operating_system/src/shell",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "processCreation": {
      "location": "code/operating_system/src/processCreation",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "Processes.c",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "scheduling": {
    "round_robin_c": {
      "location": "code/operating_system/src/scheduling/round_robin_scheduling/round_robin_c",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "queue.h",
        "queue.c",
        "README.md",
        "round_robin.c"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "data_structures": {
    "binary_heap": {
      "location": "code/data_structures/src/binary_heap",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "binary_heap.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "linked_list": {
      "location": "code/data_structures/src/linked_list",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "linked_list.java",
        "linked_list.cpp",
        "linked_list.js",
        "linked_list.c",
        "linked_list.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "bag": {
      "location": "code/data_structures/src/bag",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "bag.py",
        "bag.js",
        "bag.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "other": {
      "location": "code/data_structures/src/other",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "list": {
      "location": "code/data_structures/src/list",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "stack": {
    "cpp": {
      "location": "code/data_structures/src/stack/abstract_stack/cpp",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "istack.h",
        "arraystack.java"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "abstract_stack": {
    "arraystack": {
      "location": "code/data_structures/src/stack/abstract_stack/cpp/arraystack",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "arraystacktester.cpp",
        "arraystack.h"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "tree": {
    "segment_tree": {
      "location": "code/data_structures/src/tree/space_partitioning_tree/segment_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "lazy_segment_tree.java",
        "segment_tree_lazy_propagation.cpp",
        "segment_tree_rmq.adb",
        "segment_tree_rmq.go",
        "segment_tree_rmq.cpp",
        "segment_tree_rmq_with_update.cpp",
        "segment_tree_sum.py",
        "segment_tree.java",
        "segment_tree.scala",
        "segment_tree_sum.rb",
        "segment_tree_rmq.py",
        "README.md",
        "segment_tree_sum.cpp",
        "persistent_segment_tree_sum.cpp",
        "segment_tree_kth_statistics_on_segment.cpp",
        "segment_tree_sum.go"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "quad_tree": {
      "location": "code/data_structures/src/tree/space_partitioning_tree/quad_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "quad_tree.swift"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "interval_tree": {
      "location": "code/data_structures/src/tree/space_partitioning_tree/interval_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "interval_tree.java",
        "interval_tree.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "kd_tree": {
      "location": "code/data_structures/src/tree/space_partitioning_tree/kd_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "kd_tree.cpp",
        "kd_tree.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "pairing_heap": {
      "location": "code/data_structures/src/tree/heap/pairing_heap",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "pairing_heap.fs",
        "pairing_heap.sml",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "max_heap": {
      "location": "code/data_structures/src/tree/heap/max_heap",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "max_heap.java",
        "max_heap.py",
        "max_heap.cpp",
        "max_heap.go",
        "max_heap.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "min_heap": {
      "location": "code/data_structures/src/tree/heap/min_heap",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "min_heap.c",
        "min_heap.js",
        "min_heap.rb",
        "min_heap.cpp",
        "min_heap.py",
        "min_heap.swift",
        "min_heap.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "priority_queue": {
      "location": "code/data_structures/src/tree/heap/priority_queue",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "priority_queue.js",
        "priority_queue.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "soft_heap": {
      "location": "code/data_structures/src/tree/heap/soft_heap",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "soft_heap.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "binomial_heap": {
      "location": "code/data_structures/src/tree/heap/binomial_heap",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "binomial_heap.scala",
        "binomial_heap.cpp",
        "binomial_heap.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "avl_tree": {
      "location": "code/data_structures/src/tree/binary_tree/avl_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "avl_tree.cpp",
        "avl_tree.swift",
        "avl_tree.java",
        "avl_tree.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "aa_tree": {
      "location": "code/data_structures/src/tree/binary_tree/aa_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "aa_tree.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "binary_tree": {
      "location": "code/data_structures/src/tree/binary_tree/binary_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "treap": {
      "location": "code/data_structures/src/tree/binary_tree/treap",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "treap.cpp",
        "treap.java",
        "treap.swift",
        "treap.scala",
        "persistent_treap.kt"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "rope": {
      "location": "code/data_structures/src/tree/binary_tree/rope",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "rope.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "van_emde_boas_tree": {
      "location": "code/data_structures/src/tree/multiway_tree/van_emde_boas_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "van_emde_boas.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "union_find": {
      "location": "code/data_structures/src/tree/multiway_tree/union_find",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "union_find.py",
        "union_find.c",
        "union_find.js",
        "union_find_dynamic.cpp",
        "union_find.scala",
        "union_find.go",
        "union_find.cpp",
        "README.md",
        "union_find.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "red_black_tree": {
      "location": "code/data_structures/src/tree/multiway_tree/red_black_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "red_black_tree.java",
        "red_black_tree.c",
        "red_black_tree.scala",
        "red_black_tree.test.cpp",
        "red_black_tree.rb",
        "red_black_tree.cpp",
        "red_black_tree.h"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "fenwick_tree": {
      "location": "code/data_structures/src/tree/multiway_tree/fenwick_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "fenwick_tree.cpp",
        "fenwick_tree.go",
        "fenwick_tree.c",
        "fenwick_tree_inversion_count.cpp",
        "fenwick_tree.pl",
        "README.md",
        "fenwick_tree.py",
        "fenwick_tree.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "splay_tree": {
      "location": "code/data_structures/src/tree/multiway_tree/splay_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "readme.md",
        "splay_tree.go",
        "splay_tree.kt",
        "splay_tree.cpp",
        "splay_tree.scala",
        "splay_tree.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "trie": {
      "location": "code/data_structures/src/tree/tree/trie",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "trie.scala",
        "trie.py",
        "trie.cpp",
        "trie.java",
        "trie.rb",
        "trie.c",
        "trie.js",
        "trie.cs",
        "README.md",
        "trie.swift",
        "trie.go"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "suffix_array": {
      "location": "code/data_structures/src/tree/tree/suffix_array",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "suffix_array.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "two_three_tree": {
      "location": "code/data_structures/src/tree/b_tree/two_three_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "twothreetree.scala"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "b_tree": {
      "location": "code/data_structures/src/tree/b_tree/b_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "b_tree.py",
        "b_tree.swift",
        "b_tree.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "heap": {
    "leftist_tree": {
      "location": "code/data_structures/src/tree/heap/priority_queue/leftist_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "leftist_priority_queue.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "binary_tree": {
    "is_balance": {
      "location": "code/data_structures/src/tree/binary_tree/binary_tree/is_balance",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "is_balance.java",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "maximum_height": {
      "location": "code/data_structures/src/tree/binary_tree/binary_tree/maximum_height",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "maximum_height.java",
        "maximum_height.py",
        "maximum_height.cpp",
        "maximum_height2.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "zigzag": {
      "location": "code/data_structures/src/tree/binary_tree/binary_tree/traversal/zigzag",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "zigzag.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "is_same": {
      "location": "code/data_structures/src/tree/binary_tree/binary_tree/is_same",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "is_same.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "path_sum": {
      "location": "code/data_structures/src/tree/binary_tree/binary_tree/path_sum",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "path_sum.hpp",
        "path_sum.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "sum_left": {
      "location": "code/data_structures/src/tree/binary_tree/binary_tree/path_sum/sum_left",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md",
        "sum_left.c",
        "left_sum.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "tree": {
      "location": "code/data_structures/src/tree/binary_tree/binary_tree/tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "tree.cpp",
        "tree.py",
        "tree.java",
        "tree.rb",
        "tree.c",
        "tree.go",
        "tree2.java",
        "tree2.swift",
        "README.md",
        "tree.js",
        "tree.swift"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "bottom_view_binary_tree": {
      "location": "code/data_structures/src/tree/binary_tree/binary_tree/tree/bottom_view_binary_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "bottom_view_tree.java",
        "bottom_view_tree.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "make_mirror_tree": {
      "location": "code/data_structures/src/tree/binary_tree/binary_tree/make_mirror_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "make_mirror_tree.c",
        "make_mirror_tree.cpp",
        "README.md",
        "make_mirror_tree.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "is_binary_tree": {
      "location": "code/data_structures/src/tree/binary_tree/binary_tree/is_binary_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "is_binary_tree.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "minimum_height": {
      "location": "code/data_structures/src/tree/binary_tree/binary_tree/minimum_height",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "minimum_height.c",
        "minimum_height.cpp",
        "README.md",
        "minimum_height.java",
        "minimum_height.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "diameter": {
      "location": "code/data_structures/src/tree/binary_tree/binary_tree/diameter",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "diameter.java",
        "diameter.py",
        "diameter2.c",
        "diameter.hs",
        "diameter.cpp",
        "README.md",
        "diameter2.cpp",
        "diameter.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "convert_to_doubly_linked_list": {
      "location": "code/data_structures/src/tree/binary_tree/binary_tree/convert_to_doubly_linked_list",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "convert_to_doubly_linked_list.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "serializer": {
      "location": "code/data_structures/src/tree/binary_tree/binary_tree/serializer",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "serializer.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "make_binary_tree": {
      "location": "code/data_structures/src/tree/binary_tree/binary_tree/make_binary_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "from_inorder_and_preorder": {
      "location": "code/data_structures/src/tree/binary_tree/binary_tree/make_binary_tree/from_inorder_and_preorder",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "make_tree_from_inorder_and_preorder.cpp",
        "make_tree_from_inorder_and_preorder.java",
        "README.md",
        "make_tree_from_inorder_and_preorder.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "from_inorder_and_postorder": {
      "location": "code/data_structures/src/tree/binary_tree/binary_tree/make_binary_tree/from_inorder_and_postorder",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "make_tree_from_inorder_and_postorder.cpp",
        "make_tree_from_inorder_and_postorder.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "node": {
      "location": "code/data_structures/src/tree/binary_tree/binary_tree/node",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "node.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "traversal": {
    "right_threaded": {
      "location": "code/data_structures/src/tree/binary_tree/binary_tree/traversal/inorder/right_threaded",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "right_threaded.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "right_view": {
      "location": "code/data_structures/src/tree/binary_tree/binary_tree/traversal/preorder/right_view",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "right_view.py",
        "right_view2.cpp",
        "right_view.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "left_view": {
      "location": "code/data_structures/src/tree/binary_tree/binary_tree/traversal/preorder/left_view",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "left_view.java"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "b_tree": {
    "b_tree_c": {
      "location": "code/data_structures/src/tree/b_tree/b_tree/b_tree_c",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "btree.h",
        "btree.c",
        "main.c",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "list": {
    "c": {
      "location": "code/data_structures/src/list/doubly_linked_list/c",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "doubly_linked_list.h",
        "doubly_linked_list.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "operations": {
      "location": "code/data_structures/src/list/circular_linked_list/operations",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "is_circular.py",
        "has_loop.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "menu_interface": {
      "location": "code/data_structures/src/list/singly_linked_list/menu_interface",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "link.h",
        "singly_list.c"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "singly_linked_list": {
    "n_th_node_linked_list": {
      "location": "code/data_structures/src/list/singly_linked_list/operations/n_th_node_linked_list",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "nth_node_from_end.cpp",
        "nth_node_from_end.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "find": {
      "location": "code/data_structures/src/list/singly_linked_list/operations/find",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "search_element_python.py",
        "searchelement_list.java",
        "finding_if_element_is_present_in_the_list.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "delete": {
      "location": "code/data_structures/src/list/singly_linked_list/operations/delete",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "delete_node_with_key.java",
        "delete_nth_node.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "print_reverse": {
      "location": "code/data_structures/src/list/singly_linked_list/operations/print_reverse",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "print_reverse.py",
        "print_reverse.scala"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "rotate": {
      "location": "code/data_structures/src/list/singly_linked_list/operations/rotate",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "rotate.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "sort": {
      "location": "code/data_structures/src/list/singly_linked_list/operations/sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "bubble_sort.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "insertion": {
      "location": "code/data_structures/src/list/singly_linked_list/operations/insertion",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "insertion_at_front.py",
        "insertion_at_nth_node.py",
        "insertion_at_ending.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "detect_cycle": {
      "location": "code/data_structures/src/list/singly_linked_list/operations/detect_cycle",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "detect_cycle.cpp",
        "detect_cycle_hashmap.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "unclassified": {
      "location": "code/data_structures/src/list/singly_linked_list/operations/unclassified",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "linkedlist.java",
        "linkedlisteg.java",
        "union_intersection_in_list.c",
        "linked_list_operations.cpp",
        "union_intersection_in_list.textclipping"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "push": {
      "location": "code/data_structures/src/list/singly_linked_list/operations/push",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "push.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "merge_sorted": {
      "location": "code/data_structures/src/list/singly_linked_list/operations/merge_sorted",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "merge_sorted.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "reverse": {
      "location": "code/data_structures/src/list/singly_linked_list/operations/reverse",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "reverse.c",
        "reverse.cpp",
        "reverse_iteration.cpp",
        "reverse_recursion2.cpp",
        "reverse_recursion.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "cryptography": {
    "huffman_encoding": {
      "location": "code/cryptography/src/huffman_encoding",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "huffman_encoding.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "rsa_digital_signature": {
      "location": "code/cryptography/src/rsa_digital_signature",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "rsa_digital_signature.ipynb"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "baconian_cipher": {
      "location": "code/cryptography/src/baconian_cipher",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "baconian.rb",
        "baconian.js",
        "baconian_cipher.c",
        "baconian.cpp",
        "README.md",
        "baconian.java",
        "baconian.php",
        "baconian.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "columnar_transposition_cipher": {
      "location": "code/cryptography/src/columnar_transposition_cipher",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "columnar_transposition.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "aes_128": {
      "location": "code/cryptography/src/aes_128",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "aes_128.py",
        "aes_128.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "autokey_cipher": {
      "location": "code/cryptography/src/autokey_cipher",
      "opengenus_discuss": "",
      "opengenus_iq": "https://iq.opengenus.org/auto-key-cipher/",
      "files": [
        "README.md",
        "autokey_cipher.c",
        "autokey_cipher.cpp",
        "autokey_cipher.java"
      ],
      "updated": "31-05-2020 23:14:00"
    },
    "vigenere_cipher": {
      "location": "code/cryptography/src/vigenere_cipher",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "vigenere_cipher.rb",
        "vigenere_cipher.cpp",
        "vigenere_cipher.hs",
        "vigenere_cipher.jl",
        "vigenere_cipher.go",
        "vigenere_cipher.py",
        "vigenere_cipher.js",
        "vigenere_cipher.c",
        "README.md",
        "vigenere_cipher.php",
        "vigenere_cipher.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "rot13_cipher": {
      "location": "code/cryptography/src/rot13_cipher",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "rot13.sh",
        "rot13.rb",
        "rot13.py",
        "rot13.js",
        "rotn.java",
        "rotn.js",
        "rot13.cpp",
        "README.md",
        "rotn.cpp",
        "rotn.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "polybius_cipher": {
      "location": "code/cryptography/src/polybius_cipher",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "polybius.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "affine_cipher": {
      "location": "code/cryptography/src/affine_cipher",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "affine.java",
        "affine.py",
        "affine.cpp",
        "affinekotlin.kt",
        "affine.htm",
        "affine_cipher.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "caesar_cipher": {
      "location": "code/cryptography/src/caesar_cipher",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "decryption.cpp",
        "caesar_cipher.rb",
        "caesar_cipher.cpp",
        "encryption.cpp",
        "caesarcipher.java",
        "caesar_cipher.go",
        "caesar_cipher.py",
        "README.md",
        "caesar_cipher.cs",
        "caesar_cipher.c",
        "caesar_cipher.js",
        "caesar_cipher.hs",
        "caesar_cipher.php"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "porta_cipher": {
      "location": "code/cryptography/src/porta_cipher",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "porta.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "rail_fence_cipher": {
      "location": "code/cryptography/src/rail_fence_cipher",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "rail_fence.rb",
        "rail_fence.py",
        "rail_fence.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "atbash_cipher": {
      "location": "code/cryptography/src/atbash_cipher",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "atbash_cipher.java",
        "atbash_cipher.py",
        "atbash_cipher.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "morse_cipher": {
      "location": "code/cryptography/src/morse_cipher",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "morse_code_generator.bf",
        "morse_code.sh",
        "morse_code_translator.cpp",
        "morse_code_translator.lua",
        "morse_code_translator.php",
        "morse_code_translator.ts",
        "morse_code_generator.c",
        "morse_code_translator.js",
        "README.md",
        "morse_code_translator.py",
        "morse_code_generator.cpp",
        "morsecode.java",
        "morse_code_generator.rb"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "autokey_cipher": {
      "location": "code/cryptography/src/autokey_cipher",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "autokey.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "rsa": {
      "location": "code/cryptography/src/rsa",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "rsa.c",
        "rsa_input.in",
        "rsa.py",
        "rsa.cs",
        "rsa.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "runningkey_cipher": {
      "location": "code/cryptography/src/runningkey_cipher",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "runningkey.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "aes_128": {
    "example": {
      "location": "code/cryptography/src/aes_128/aes_csharp/example",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "streamcipherexception.cs",
        "streamcipher.cs",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "greedy_algorithms": {
    "prim_minimum_spanning_tree": {
      "location": "code/greedy_algorithms/src/prim_minimum_spanning_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "prim_minimum_spanning_tree.cpp",
        "prim_minimum_spanning_tree.c",
        "README.md",
        "prim_minimum_spanning_tree.py",
        "prim_minimum_spanning_tree.hs"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "job_sequencing": {
      "location": "code/greedy_algorithms/src/job_sequencing",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "job_sequencing.cpp",
        "job_sequencing.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "kruskal_minimum_spanning_tree": {
      "location": "code/greedy_algorithms/src/kruskal_minimum_spanning_tree",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "kruskal.py",
        "kruskal.c",
        "kruskal_using_adjacency_matrix.c",
        "kruskal.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "huffman_coding": {
      "location": "code/greedy_algorithms/src/huffman_coding",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "huffman_coding.cpp",
        "huffman_coding.c",
        "README.md",
        "huffman_coding.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "activity_selection": {
      "location": "code/greedy_algorithms/src/activity_selection",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "activity_selection.java",
        "activity_selection.cpp",
        "activity_selection.py",
        "activity_selection.c",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "minimum_coins": {
      "location": "code/greedy_algorithms/src/minimum_coins",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "minimum_coins.js",
        "minimum_coins.py",
        "minimum_coins.c",
        "minimum_coins.cpp",
        "minimumcoins.java",
        "minimum_coins.go",
        "minimumcoins.hs",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "dijkstra_shortest_path": {
      "location": "code/greedy_algorithms/src/dijkstra_shortest_path",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "dijkstra_shortest_path.java",
        "dijkstra_shortest_path.c",
        "dijkstra_shortest_path.py",
        "README.md",
        "dijkstra_shortest_path.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "warshall": {
      "location": "code/greedy_algorithms/src/warshall",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "warshalls.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "fractional_knapsack": {
      "location": "code/greedy_algorithms/src/fractional_knapsack",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "fractional_knapsack.java",
        "fractional_knapsack.cpp",
        "fractional_knapsack.c",
        "fractional_knapsack.cs",
        "fractional_knapsack.py",
        "README.md",
        "fractional_knapsack.go"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "k_centers": {
      "location": "code/greedy_algorithms/src/k_centers",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "k_centers.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "hillclimber": {
      "location": "code/greedy_algorithms/src/hillclimber",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "hillclimber.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "egyptian_fraction": {
      "location": "code/greedy_algorithms/src/egyptian_fraction",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "egyptian_fraction.c",
        "egyptian_fraction.cpp",
        "egyptian_fraction.py"
      ],
      "updated": "18-05-2019 08:11:06"
    }
  },
  "code": {
    "src": {
      "location": "code/sorting/src",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "circle_sort": {
      "location": "code/sorting/circle_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "README.md"
      ],
      "updated": "18-05-2019 08:11:07"
    }
  },
  "sorting": {
    "topological_sort": {
      "location": "code/sorting/src/topological_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "readme.md",
        "topological_sort.c",
        "topological_sort.java",
        "topological_sort.py",
        "topological_sort.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "bucket_sort": {
      "location": "code/sorting/src/bucket_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "bucket_sort.js",
        "bucket_sort.c",
        "bucket_sort.rb",
        "bucket_sort.cs",
        "bucket_sort.go",
        "bucket_sort.php",
        "bucket_sort.java",
        "bucket_sort.swift",
        "bucket_sort.py",
        "README.md",
        "bucket_sort.m",
        "bucket_sort.cpp",
        "bucket_sort.hs"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "flash_sort": {
      "location": "code/sorting/src/flash_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "flash_sort.js",
        "flash_sort.c",
        "flash_sort.m",
        "README.md",
        "flash_sort.swift"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "median_sort": {
      "location": "code/sorting/src/median_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "median_sort.py",
        "median_sort.m",
        "median_sort.swift",
        "median_sort.cpp",
        "median_sort_fast.cpp",
        "median_sort.cs"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "shell_sort": {
      "location": "code/sorting/src/shell_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "shell_sort.py",
        "shell_sort.c",
        "shell_sort.go",
        "shell_sort.js",
        "shell_sort.cpp",
        "shell_sort.swift",
        "shellsort.go",
        "shell_sort.java",
        "shell_sort.kt",
        "README.md",
        "shell_sort.m"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "quick_sort": {
      "location": "code/sorting/src/quick_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "quick_sort_median_of_medians.c",
        "quick_sort.py",
        "quick_sort.swift",
        "quick_sort.elm",
        "quick_sort_extension.swift",
        "quick_sort.java",
        "quick_sort.m",
        "quick_sort.hs",
        "quick_sort.c",
        "quick_sort.cs",
        "quick_sort.cpp",
        "quick_sort.go",
        "quick_sort.ts",
        "quick_sort.js",
        "quick_sort.ml",
        "quick_sort.scala",
        "dutch_national_flag.cpp",
        "quick_sort.lua",
        "quick_sort.rb",
        "README.md",
        "quick_sort_in_place.scala",
        "quick_sort_three_way.cpp",
        "quick_sort.sh",
        "quick_sort.rs"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "selection_sort": {
      "location": "code/sorting/src/selection_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "selection_sort.vb",
        "selection_sort.kt",
        "selection_sort.cpp",
        "selection_sort.py",
        "selection_sort.php",
        "selection_sort.go",
        "selection_sort.m",
        "selection_sort_extension.swift",
        "selection_sort.c",
        "README.md",
        "selection_sort.sh",
        "selection_sort.swift",
        "selection_sort.hs",
        "selection_sort.js",
        "selection_sort.rs",
        "selection_sort.cs",
        "selection_sort.rb",
        "selection_sort.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "bead_sort": {
      "location": "code/sorting/src/bead_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "bead_sort_numpy.py",
        "bead_sort.cpp",
        "bead_sort.swift",
        "bead_sort.js",
        "bead_sort.m",
        "bead_sort.php",
        "bead_sort.java",
        "README.md",
        "bead_sort.cs",
        "bead_sort.py",
        "bead_sort.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "stooge_sort": {
      "location": "code/sorting/src/stooge_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "stooge_sort.java",
        "stooge_sort.js",
        "stooge_sort.go",
        "stooge_sort.c",
        "stooge_sort.py",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "counting_sort": {
      "location": "code/sorting/src/counting_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "counting_sort.py",
        "counting_sort.go",
        "counting_sort.swift",
        "counting_sort.cpp",
        "counting_sort.js",
        "counting_sort.java",
        "counting_sort.m",
        "counting_sort.c",
        "README.md",
        "counting_sort.cs"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "sleep_sort": {
      "location": "code/sorting/src/sleep_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "sleep_sort.cpp",
        "sleep_sort.swift",
        "sleep_sort.cs",
        "sleep_sort.c",
        "sleep_sort.py",
        "sleep_sort.sh",
        "sleep_sort.js",
        "sleep_sort.go",
        "sleep_sort.jl",
        "sleep_sort.php",
        "README.md",
        "sleep_sort.rb",
        "sleep_sort.scala",
        "sleep_sort.m",
        "sleep_sort.java"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "heap_sort": {
      "location": "code/sorting/src/heap_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "heap_sort.py",
        "heap_sort.m",
        "heap_sort.swift",
        "heap_sort.js",
        "heap_sort.cpp",
        "heapsort.go",
        "heap_sort.java",
        "README.md",
        "heap_sort.rs",
        "heap_sort.sc",
        "heap_sort.rb",
        "heap_sort.go",
        "heap_sort.cs",
        "heap_sort.c"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "intro_sort": {
      "location": "code/sorting/src/intro_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "intro_sort.swift",
        "intro_sort.m",
        "intro_sort.cpp",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "tree_sort": {
      "location": "code/sorting/src/tree_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "tree_sort.cpp",
        "tree_sort.js",
        "tree_sort.c",
        "README.md",
        "tree_sort.java",
        "tree_sort.py",
        "tree_sort.go"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "comb_sort": {
      "location": "code/sorting/src/comb_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "comb_sort.go",
        "comb_sort.js",
        "comb_sort.c",
        "comb_sort.swift",
        "comb_sort.m",
        "comb_sort.java",
        "README.md",
        "comb_sort.cpp",
        "comb_sort.py"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "bogo_sort": {
      "location": "code/sorting/src/bogo_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "bogo_sort.java",
        "bogo_sort.fs",
        "bogo_sort.swift",
        "bogo_sort.js",
        "bogo_sort.py",
        "bogo_sort.c",
        "README.md",
        "bogo_sort.go",
        "bogo_sort.m",
        "bogo_sort.pl",
        "bogo_sort.rb",
        "bogo_sort.cpp"
      ],
      "updated": "18-05-2019 08:11:06"
    },
    "insertion_sort": {
      "location": "code/sorting/src/insertion_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "https://iq.opengenus.org/insertion-sort-analysis/",
      "files": [
        "insertion_sort_extension.swift",
        "insertion_sort.hs",
        "insertion_sort.py",
        "insertion_sort.rb",
        "insertion_sort.go",
        "insertion_sort.cs",
        "insertion_sort.java",
        "insertion_sort.ml",
        "insertion_sort.kt",
        "insertion_sort.sh",
        "insertion_sort.swift",
        "insertion_sort.php",
        "insertion_sort.c",
        "insertion_sort.m",
        "insertion_sort.rs",
        "insertion_sort.cpp",
        "README.md",
        "insertion_sort.js",
        "insertion_sort.re"
      ],
      "updated": "06-05-2020 4:24:00" 
    },
    "bubble_sort": {
      "location": "code/sorting/src/bubble_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "bubble_sort.py",
        "bubble_sort.sml",
        "bubble_sort.go",
        "bubble_sort.hs",
        "bubble_sort.rb",
        "bubble_sort.sh",
        "bubble_sort.jl",
        "bubble_sort.php",
        "bubble_sort.m",
        "bubble_sort.c",
        "bubble_sort.swift",
        "bubble_sort.cs",
        "bubble_sort.cpp",
        "bubble_sort.rs",
        "bubble_sort.exs",
        "bubble_sort_extension.swift",
        "bubble_sort_efficient.cpp",
        "bubble_sort.ts",
        "README.md",
        "bubble_sort.js",
        "bubble_sort.f",
        "bubble_sort.elm",
        "bubble_sort.java",
        "bubble_sort.kt"
      ],
      "updated": "18-05-2019 08:11:07"
    },
    "merge_sort": {
      "location": "code/sorting/src/merge_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "merge_sort.cs",
        "merge_sort.sh",
        "merge_sort.ts",
        "merge_sort.kt",
        "merge_sort.pl",
        "merge_sort.fs",
        "merge_sort.php",
        "merge_sort.go",
        "merge_sort_extension.swift",
        "merge_sort.js",
        "merge_sort.m",
        "merge_sort.rs",
        "merge_sort.java",
        "merge_sort.py",
        "merge_sort.scala",
        "merge_sort.rb",
        "merge_sort.c",
        "merge_sort.hs",
        "README.md",
        "merge_sort.cpp",
        "merge_sort_linked_list.c",
        "merge_sort.swift"
      ],
      "updated": "18-05-2019 08:11:07"
    },
    "cycle_sort": {
      "location": "code/sorting/src/cycle_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "cycle_sort.py",
        "cycle_sort.go",
        "cycle_sort.swift",
        "cycle_sort.c",
        "cycle_sort.js",
        "cycle_sort.java",
        "README.md",
        "cycle_sort.m",
        "cycle_sort.cs",
        "cycle_sort.cpp"
      ],
      "updated": "18-05-2019 08:11:07"
    },
    "pigeonhole_sort": {
      "location": "code/sorting/src/pigeonhole_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "pigeonhole_sort.cpp",
        "pigeonhole_sort.php",
        "pigeonhole_sort.js",
        "pigeonhole_sort.go",
        "pigeonhole_sort.py",
        "pigeonhole_sort.m",
        "pigeonhole_sort.c",
        "pigeonhole_sort.swift",
        "pigeonhole_sort.java",
        "README.md",
        "pigeonhole_sort.cs",
        "pigeonholesort.scala"
      ],
      "updated": "18-05-2019 08:11:07"
    },
    "radix_sort": {
      "location": "code/sorting/src/radix_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "radix_sort.py",
        "radix_sort.c",
        "radix_sort.js",
        "radix_sort.go",
        "radix_sort.rs",
        "radix_sort.java",
        "radix_sort.cpp",
        "README.md",
        "radix_sort.hs"
      ],
      "updated": "18-05-2019 08:11:07"
    },
    "gnome_sort": {
      "location": "code/sorting/src/gnome_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "gnome_sort.java",
        "gnome_sort.go",
        "gnome_sort.swift",
        "gnome_sort.cpp",
        "README.md",
        "gnome_sort.c",
        "gnome_sort.js",
        "gnome_sort.m",
        "gnome_sort.py"
      ],
      "updated": "18-05-2019 08:11:07"
    },
    "shaker_sort": {
      "location": "code/sorting/src/shaker_sort",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "shaker_sort.m",
        "shaker_sort.cs",
        "shaker_sort.js",
        "shaker_sort.cpp",
        "shaker_sort.java",
        "shaker_sort.c",
        "shaker_sort.py",
        "shaker_sort.swift",
        "shaker_sort.go",
        "shaker_sort.rs",
        "shaker_sort.php",
        "README.md"
      ],
      "updated": "18-05-2019 08:11:07"
    },
    "linear_search": {
      "location": "code/languages/c/linear_search",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "linear_search.c",
        "linear_search_duplicates.c",
        "linear_search_duplicates_linked_list.c",
        "linear_search_linked_list.c "
        "README.md"
      ],
      "updated": "31-05-2020 06:50:00"
    },
    "initializing_multimap": {
      "location": "code/languages/cpp/initializing_multimap",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "multimap.cpp"
        "README.md"
      ],
      "updated": "31-05-2020 07:18:07"
    },
    "languages": {
      "2D_array_Numpy": {
      "location": "code/languages/python/2D-array-Numpy",
      "opengenus_discuss": "",
      "opengenus_iq": "",
      "files": [
        "2D-array-numpy.py",
        "README.md"
      ],
      "updated": "24-04-2020 09:45:30"
     },
     "bootstrap-table": {
      "location": "code/html/bootstrap",
      "opengenus_discuss": "",
      "opengenus_iq": "https://iq.opengenus.org/bootstrap-tables",
      "files": [
        "tables.html",
        "Readme.MD"
      ],
      "updated": "28-04-2020 19:15:46"
    },
    "Handlingexceptions": {
      "location": "code/java/Handlingexceptions",
      "opengenus_discuss": "",
      "opengenus_iq": "https://iq.opengenus.org/handling-exceptions-in-java/",
      "files": [
        "Handlingexp.java",
        "README.MD"
      ],
      "updated": "31-05-2020 00:01:57"
    },
      "armstrong_num_range": {
        "location": "code/mathematical_algorithms/src/armstrong_num_range",
        "opengenus_discuss": "",
        "opengenus_iq": "https://iq.opengenus.org/find-all-armstrong-numbers-in-a-range/",
        "files": [
        "armstrong_num_range.c",
        "REAADME.md"
      ],
      "updated": "03-05-2020 21:15:57"
    },
    "counter_objects": {
    "location": "code/languages/python/counter_objects",
      "opengenus_discuss": "",
      "opengenus_iq": "https://iq.opengenus.org/counter-objects-in-python/",
      "files": [
        "counter_obj.py",
        "README.md"
      ],
      "updated": "29-05-2020 23:50:46"
    },
      "VGG-11":{
      "location": "code/artificial_intelligence/src/neural_network"
      "opengenus_discuss": "",
      "opengenus_iq": "https://iq.opengenus.org/vgg-11",
      "files": [
        "vgg1.md"
        "README.md"
      ],
        "updated": "30-05-2020 12:03:47"
      },
     "Inception_Model":{
      "location": "code/artificial_intelligence/src/Inception_Pre-trained_Model"
      "opengenus_discuss": "",
      "opengenus_iq": "https://iq.opengenus.org/inception-pre-trained-cnn-model/",
      "files": [
        "Inception_model.md"
        "README.md"
      ],
        "updated": "30-05-2020 04:57:47"
      },
      "Binary_GCD_Algorithm":{
      "location": "code/mathematical_algorithms/src/Binary_GCD_Algorithm"
      "opengenus_discuss" : "",
      "opengenus_iq": " https://iq.opengenus.org/p/27a7354e-a256-4fcd-876e-5ffdbdf9b668/",
      "files": [
       "Binary_GCD_Iterative.cpp"
       "Binary_ GCD_Recursive.cpp"
       "README.md"
      ],
        "updated": "31-05-2020 01:08:47"
      },
      "this_reference":{
        "location": "code/languages/Java/this_reference"
        "opengenus_discuss": "",
        "opengenus_iq": "https://iq.opengenus.org/use-of-this-in-java/",
        "files": [
          "this.java"
          "Readme.md"
        ],
          "updated": "30-05-2020 11:47:47"
      },
        "Java_String_Class":{
        "location": "code/languages/Java/String"
        "opengenus_discuss": "",
        "opengenus_iq": "https://iq.opengenus.org/java-lang-string-class/",
        "files": [
          "StringClass.java"
          "Readme.md"
        ],
          "updated": "31-05-2020 07:45:47"
        }
   }
