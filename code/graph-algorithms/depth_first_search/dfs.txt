
	public boolean dfs(String a, String b) {
		HashMap<String, Boolean> hmap = new HashMap<>();

		pair temp = new pair(a, a);
		LinkedList<pair> stack = new LinkedList<>();
		stack.addFirst(temp);
		while (!stack.isEmpty()) {
			pair jojo = stack.getFirst();
			hmap.put(jojo.vname, true);
			stack.removeFirst();

			if (vtx.get(jojo.vname).edgen.containsKey(b)) {
				System.out.println(jojo.anssofar + b);
				return true;
			}

			ArrayList<String> arr = new ArrayList<>(vtx.get(jojo.vname).edgen.keySet());

			for (int i = 0; i < arr.size(); i++) {
				if (!hmap.containsKey(arr.get(i))) {
					stack.addFirst(new pair(arr.get(i), jojo.anssofar + arr.get(i)));
				}
			}
		}
		return false;
	}
class pair {
		String vname;
		String anssofar;


		pair(String vname, String anssofar) {
			this.vname = vname;
			this.anssofar = anssofar;
		}
	}
